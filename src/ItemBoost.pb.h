// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemBoost.proto

#ifndef PROTOBUF_ItemBoost_2eproto__INCLUDED
#define PROTOBUF_ItemBoost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ItemBoost_2eproto();
void protobuf_AssignDesc_ItemBoost_2eproto();
void protobuf_ShutdownFile_ItemBoost_2eproto();

class ItemBoostTermInfo;
class ItemBoostRow;

// ===================================================================

class ItemBoostTermInfo : public ::google::protobuf::Message {
 public:
  ItemBoostTermInfo();
  virtual ~ItemBoostTermInfo();

  ItemBoostTermInfo(const ItemBoostTermInfo& from);

  inline ItemBoostTermInfo& operator=(const ItemBoostTermInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBoostTermInfo& default_instance();

  void Swap(ItemBoostTermInfo* other);

  // implements Message ----------------------------------------------

  ItemBoostTermInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBoostTermInfo& from);
  void MergeFrom(const ItemBoostTermInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string term = 5;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 5;
  inline const ::std::string& term() const;
  inline void set_term(const ::std::string& value);
  inline void set_term(const char* value);
  inline void set_term(const char* value, size_t size);
  inline ::std::string* mutable_term();
  inline ::std::string* release_term();
  inline void set_allocated_term(::std::string* term);

  // required uint32 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cm.ItemBoostTermInfo)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* term_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_ItemBoost_2eproto();
  friend void protobuf_AssignDesc_ItemBoost_2eproto();
  friend void protobuf_ShutdownFile_ItemBoost_2eproto();

  void InitAsDefaultInstance();
  static ItemBoostTermInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemBoostRow : public ::google::protobuf::Message {
 public:
  ItemBoostRow();
  virtual ~ItemBoostRow();

  ItemBoostRow(const ItemBoostRow& from);

  inline ItemBoostRow& operator=(const ItemBoostRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBoostRow& default_instance();

  void Swap(ItemBoostRow* other);

  // implements Message ----------------------------------------------

  ItemBoostRow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBoostRow& from);
  void MergeFrom(const ItemBoostRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 num_impressions = 3;
  inline bool has_num_impressions() const;
  inline void clear_num_impressions();
  static const int kNumImpressionsFieldNumber = 3;
  inline ::google::protobuf::uint32 num_impressions() const;
  inline void set_num_impressions(::google::protobuf::uint32 value);

  // required uint32 num_clicks = 4;
  inline bool has_num_clicks() const;
  inline void clear_num_clicks();
  static const int kNumClicksFieldNumber = 4;
  inline ::google::protobuf::uint32 num_clicks() const;
  inline void set_num_clicks(::google::protobuf::uint32 value);

  // repeated .cm.ItemBoostTermInfo top_terms = 7;
  inline int top_terms_size() const;
  inline void clear_top_terms();
  static const int kTopTermsFieldNumber = 7;
  inline const ::cm::ItemBoostTermInfo& top_terms(int index) const;
  inline ::cm::ItemBoostTermInfo* mutable_top_terms(int index);
  inline ::cm::ItemBoostTermInfo* add_top_terms();
  inline const ::google::protobuf::RepeatedPtrField< ::cm::ItemBoostTermInfo >&
      top_terms() const;
  inline ::google::protobuf::RepeatedPtrField< ::cm::ItemBoostTermInfo >*
      mutable_top_terms();

  // @@protoc_insertion_point(class_scope:cm.ItemBoostRow)
 private:
  inline void set_has_num_impressions();
  inline void clear_has_num_impressions();
  inline void set_has_num_clicks();
  inline void clear_has_num_clicks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_impressions_;
  ::google::protobuf::uint32 num_clicks_;
  ::google::protobuf::RepeatedPtrField< ::cm::ItemBoostTermInfo > top_terms_;
  friend void  protobuf_AddDesc_ItemBoost_2eproto();
  friend void protobuf_AssignDesc_ItemBoost_2eproto();
  friend void protobuf_ShutdownFile_ItemBoost_2eproto();

  void InitAsDefaultInstance();
  static ItemBoostRow* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemBoostTermInfo

// required string term = 5;
inline bool ItemBoostTermInfo::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemBoostTermInfo::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemBoostTermInfo::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemBoostTermInfo::clear_term() {
  if (term_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    term_->clear();
  }
  clear_has_term();
}
inline const ::std::string& ItemBoostTermInfo::term() const {
  // @@protoc_insertion_point(field_get:cm.ItemBoostTermInfo.term)
  return *term_;
}
inline void ItemBoostTermInfo::set_term(const ::std::string& value) {
  set_has_term();
  if (term_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    term_ = new ::std::string;
  }
  term_->assign(value);
  // @@protoc_insertion_point(field_set:cm.ItemBoostTermInfo.term)
}
inline void ItemBoostTermInfo::set_term(const char* value) {
  set_has_term();
  if (term_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    term_ = new ::std::string;
  }
  term_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.ItemBoostTermInfo.term)
}
inline void ItemBoostTermInfo::set_term(const char* value, size_t size) {
  set_has_term();
  if (term_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    term_ = new ::std::string;
  }
  term_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.ItemBoostTermInfo.term)
}
inline ::std::string* ItemBoostTermInfo::mutable_term() {
  set_has_term();
  if (term_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    term_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.ItemBoostTermInfo.term)
  return term_;
}
inline ::std::string* ItemBoostTermInfo::release_term() {
  clear_has_term();
  if (term_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = term_;
    term_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ItemBoostTermInfo::set_allocated_term(::std::string* term) {
  if (term_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete term_;
  }
  if (term) {
    set_has_term();
    term_ = term;
  } else {
    clear_has_term();
    term_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.ItemBoostTermInfo.term)
}

// required uint32 score = 6;
inline bool ItemBoostTermInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemBoostTermInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemBoostTermInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemBoostTermInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ItemBoostTermInfo::score() const {
  // @@protoc_insertion_point(field_get:cm.ItemBoostTermInfo.score)
  return score_;
}
inline void ItemBoostTermInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:cm.ItemBoostTermInfo.score)
}

// -------------------------------------------------------------------

// ItemBoostRow

// required uint32 num_impressions = 3;
inline bool ItemBoostRow::has_num_impressions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemBoostRow::set_has_num_impressions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemBoostRow::clear_has_num_impressions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemBoostRow::clear_num_impressions() {
  num_impressions_ = 0u;
  clear_has_num_impressions();
}
inline ::google::protobuf::uint32 ItemBoostRow::num_impressions() const {
  // @@protoc_insertion_point(field_get:cm.ItemBoostRow.num_impressions)
  return num_impressions_;
}
inline void ItemBoostRow::set_num_impressions(::google::protobuf::uint32 value) {
  set_has_num_impressions();
  num_impressions_ = value;
  // @@protoc_insertion_point(field_set:cm.ItemBoostRow.num_impressions)
}

// required uint32 num_clicks = 4;
inline bool ItemBoostRow::has_num_clicks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemBoostRow::set_has_num_clicks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemBoostRow::clear_has_num_clicks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemBoostRow::clear_num_clicks() {
  num_clicks_ = 0u;
  clear_has_num_clicks();
}
inline ::google::protobuf::uint32 ItemBoostRow::num_clicks() const {
  // @@protoc_insertion_point(field_get:cm.ItemBoostRow.num_clicks)
  return num_clicks_;
}
inline void ItemBoostRow::set_num_clicks(::google::protobuf::uint32 value) {
  set_has_num_clicks();
  num_clicks_ = value;
  // @@protoc_insertion_point(field_set:cm.ItemBoostRow.num_clicks)
}

// repeated .cm.ItemBoostTermInfo top_terms = 7;
inline int ItemBoostRow::top_terms_size() const {
  return top_terms_.size();
}
inline void ItemBoostRow::clear_top_terms() {
  top_terms_.Clear();
}
inline const ::cm::ItemBoostTermInfo& ItemBoostRow::top_terms(int index) const {
  // @@protoc_insertion_point(field_get:cm.ItemBoostRow.top_terms)
  return top_terms_.Get(index);
}
inline ::cm::ItemBoostTermInfo* ItemBoostRow::mutable_top_terms(int index) {
  // @@protoc_insertion_point(field_mutable:cm.ItemBoostRow.top_terms)
  return top_terms_.Mutable(index);
}
inline ::cm::ItemBoostTermInfo* ItemBoostRow::add_top_terms() {
  // @@protoc_insertion_point(field_add:cm.ItemBoostRow.top_terms)
  return top_terms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cm::ItemBoostTermInfo >&
ItemBoostRow::top_terms() const {
  // @@protoc_insertion_point(field_list:cm.ItemBoostRow.top_terms)
  return top_terms_;
}
inline ::google::protobuf::RepeatedPtrField< ::cm::ItemBoostTermInfo >*
ItemBoostRow::mutable_top_terms() {
  // @@protoc_insertion_point(field_mutable_list:cm.ItemBoostRow.top_terms)
  return &top_terms_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cm

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ItemBoost_2eproto__INCLUDED

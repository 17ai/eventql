// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JoinedSession.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "JoinedSession.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cm {

namespace {

const ::google::protobuf::Descriptor* JoinedSearchQueryResultItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinedSearchQueryResultItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinedSearchQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinedSearchQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinedItemVisit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinedItemVisit_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinedCartItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinedCartItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinedSession_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinedSession_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ProtoLanguage_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProtoPageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProtoDeviceType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProtoCurrency_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_JoinedSession_2eproto() {
  protobuf_AddDesc_JoinedSession_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "JoinedSession.proto");
  GOOGLE_CHECK(file != NULL);
  JoinedSearchQueryResultItem_descriptor_ = file->message_type(0);
  static const int JoinedSearchQueryResultItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, clicked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, shop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, category1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, category2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, category3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, is_paid_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, is_recommendation_),
  };
  JoinedSearchQueryResultItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinedSearchQueryResultItem_descriptor_,
      JoinedSearchQueryResultItem::default_instance_,
      JoinedSearchQueryResultItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQueryResultItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinedSearchQueryResultItem));
  JoinedSearchQuery_descriptor_ = file->message_type(1);
  static const int JoinedSearchQuery_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, device_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, page_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, query_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, query_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, query_string_normalized_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, category1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, category2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, category3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, shop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, result_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_result_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_result_items_clicked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_ad_impressions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_ad_clicks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_cart_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, num_order_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, cart_value_eurcents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, gmv_eurcents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, ab_test_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, experiments_),
  };
  JoinedSearchQuery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinedSearchQuery_descriptor_,
      JoinedSearchQuery::default_instance_,
      JoinedSearchQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSearchQuery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinedSearchQuery));
  JoinedItemVisit_descriptor_ = file->message_type(2);
  static const int JoinedItemVisit_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, shop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, category1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, category2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, category3_),
  };
  JoinedItemVisit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinedItemVisit_descriptor_,
      JoinedItemVisit::default_instance_,
      JoinedItemVisit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedItemVisit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinedItemVisit));
  JoinedCartItem_descriptor_ = file->message_type(3);
  static const int JoinedCartItem_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, price_cents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, checkout_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, shop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, category1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, category2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, category3_),
  };
  JoinedCartItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinedCartItem_descriptor_,
      JoinedCartItem::default_instance_,
      JoinedCartItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedCartItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinedCartItem));
  JoinedSession_descriptor_ = file->message_type(4);
  static const int JoinedSession_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, customer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, customer_session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, first_seen_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, first_last_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, referrer_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, referrer_campaign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, referrer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, num_cart_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, num_order_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, cart_value_eurcents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, gmv_eurcents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, ab_test_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, experiments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, search_queries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, item_visits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, cart_items_),
  };
  JoinedSession_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinedSession_descriptor_,
      JoinedSession::default_instance_,
      JoinedSession_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinedSession, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinedSession));
  ProtoLanguage_descriptor_ = file->enum_type(0);
  ProtoPageType_descriptor_ = file->enum_type(1);
  ProtoDeviceType_descriptor_ = file->enum_type(2);
  ProtoCurrency_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_JoinedSession_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinedSearchQueryResultItem_descriptor_, &JoinedSearchQueryResultItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinedSearchQuery_descriptor_, &JoinedSearchQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinedItemVisit_descriptor_, &JoinedItemVisit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinedCartItem_descriptor_, &JoinedCartItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinedSession_descriptor_, &JoinedSession::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_JoinedSession_2eproto() {
  delete JoinedSearchQueryResultItem::default_instance_;
  delete JoinedSearchQueryResultItem_reflection_;
  delete JoinedSearchQuery::default_instance_;
  delete JoinedSearchQuery_reflection_;
  delete JoinedItemVisit::default_instance_;
  delete JoinedItemVisit_reflection_;
  delete JoinedCartItem::default_instance_;
  delete JoinedCartItem_reflection_;
  delete JoinedSession::default_instance_;
  delete JoinedSession_reflection_;
}

void protobuf_AddDesc_JoinedSession_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023JoinedSession.proto\022\002cm\"\316\001\n\033JoinedSear"
    "chQueryResultItem\022\017\n\007item_id\030\024 \002(\t\022\020\n\010po"
    "sition\030\023 \002(\r\022\017\n\007clicked\030\017 \002(\010\022\017\n\007shop_id"
    "\030\025 \001(\r\022\021\n\tcategory1\030\026 \001(\r\022\021\n\tcategory2\030\027"
    " \001(\r\022\021\n\tcategory3\030\030 \001(\r\022\026\n\016is_paid_resul"
    "t\030> \001(\010\022\031\n\021is_recommendation\030\? \001(\010\"\357\004\n\021J"
    "oinedSearchQuery\022\014\n\004time\030\022 \002(\004\022#\n\010langua"
    "ge\030\002 \002(\0162\021.cm.ProtoLanguage\022(\n\013device_ty"
    "pe\030\n \002(\0162\023.cm.ProtoDeviceType\022$\n\tpage_ty"
    "pe\030\013 \002(\0162\021.cm.ProtoPageType\022\022\n\nquery_typ"
    "e\030@ \001(\t\022\014\n\004page\030\001 \001(\r\022\024\n\014query_string\030\003 "
    "\001(\t\022\037\n\027query_string_normalized\030\004 \001(\t\022\021\n\t"
    "category1\030\014 \001(\r\022\021\n\tcategory2\030\r \001(\r\022\021\n\tca"
    "tegory3\030\016 \001(\r\022\017\n\007shop_id\030  \001(\r\0225\n\014result"
    "_items\030\021 \003(\0132\037.cm.JoinedSearchQueryResul"
    "tItem\022\030\n\020num_result_items\030\005 \002(\r\022 \n\030num_r"
    "esult_items_clicked\030\006 \002(\r\022\032\n\022num_ad_impr"
    "essions\030\007 \002(\r\022\025\n\rnum_ad_clicks\030\010 \002(\r\022\026\n\016"
    "num_cart_items\030+ \001(\r\022\027\n\017num_order_items\030"
    ", \001(\r\022\033\n\023cart_value_eurcents\030- \001(\r\022\024\n\014gm"
    "v_eurcents\030. \001(\r\022\025\n\rab_test_group\030\t \001(\r\022"
    "\023\n\013experiments\0307 \001(\t\"z\n\017JoinedItemVisit\022"
    "\014\n\004time\030\032 \002(\004\022\017\n\007item_id\030\033 \002(\t\022\017\n\007shop_i"
    "d\030\034 \001(\r\022\021\n\tcategory1\030\035 \001(\r\022\021\n\tcategory2\030"
    "\036 \001(\r\022\021\n\tcategory3\030\037 \001(\r\"\334\001\n\016JoinedCartI"
    "tem\022\014\n\004time\030! \002(\004\022\017\n\007item_id\030\" \002(\t\022\020\n\010qu"
    "antity\030\' \002(\r\022\023\n\013price_cents\030( \002(\r\022#\n\010cur"
    "rency\030) \002(\0162\021.cm.ProtoCurrency\022\025\n\rchecko"
    "ut_step\030* \002(\r\022\017\n\007shop_id\030# \001(\r\022\021\n\tcatego"
    "ry1\030$ \001(\r\022\021\n\tcategory2\030% \001(\r\022\021\n\tcategory"
    "3\030& \001(\r\"\311\003\n\rJoinedSession\022\020\n\010customer\030< "
    "\001(\t\022\033\n\023customer_session_id\030= \001(\t\022\027\n\017firs"
    "t_seen_time\0305 \001(\004\022\027\n\017first_last_time\0306 \001"
    "(\004\022\024\n\014referrer_url\0309 \001(\t\022\031\n\021referrer_cam"
    "paign\030: \001(\t\022\025\n\rreferrer_name\030; \001(\t\022\026\n\016nu"
    "m_cart_items\030/ \001(\r\022\027\n\017num_order_items\0300 "
    "\001(\r\022\033\n\023cart_value_eurcents\0301 \001(\r\022\024\n\014gmv_"
    "eurcents\0302 \001(\r\022\025\n\rab_test_group\0303 \001(\r\022\023\n"
    "\013experiments\0308 \001(\t\022-\n\016search_queries\030\020 \003"
    "(\0132\025.cm.JoinedSearchQuery\022(\n\013item_visits"
    "\030\031 \003(\0132\023.cm.JoinedItemVisit\022&\n\ncart_item"
    "s\0304 \003(\0132\022.cm.JoinedCartItem*\245\001\n\rProtoLan"
    "guage\022\035\n\031LANGUAGE_UNKNOWN_LANGUAGE\020\000\022\017\n\013"
    "LANGUAGE_DE\020\002\022\017\n\013LANGUAGE_EN\020\001\022\017\n\013LANGUA"
    "GE_ES\020\003\022\017\n\013LANGUAGE_FR\020\004\022\017\n\013LANGUAGE_IT\020"
    "\005\022\017\n\013LANGUAGE_NL\020\006\022\017\n\013LANGUAGE_PL\020\007*z\n\rP"
    "rotoPageType\022\031\n\025PAGETYPE_UNKNOWN_PAGE\020\000\022"
    "\030\n\024PAGETYPE_SEARCH_PAGE\020\001\022\031\n\025PAGETYPE_CA"
    "TALOG_PAGE\020\002\022\031\n\025PAGETYPE_PRODUCT_PAGE\020\003*"
    "u\n\017ProtoDeviceType\022\035\n\031DEVICETYPE_UNKNOWN"
    "_DEVICE\020\000\022\026\n\022DEVICETYPE_DESKTOP\020\001\022\024\n\020DEV"
    "ICETYPE_PHONE\020\002\022\025\n\021DEVICETYPE_TABLET\020\003*d"
    "\n\rProtoCurrency\022\035\n\031CURRENCY_UNKNOWN_CURR"
    "ENCY\020\000\022\020\n\014CURRENCY_EUR\020\001\022\020\n\014CURRENCY_PLN"
    "\020\002\022\020\n\014CURRENCY_USD\020\003", 2180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "JoinedSession.proto", &protobuf_RegisterTypes);
  JoinedSearchQueryResultItem::default_instance_ = new JoinedSearchQueryResultItem();
  JoinedSearchQuery::default_instance_ = new JoinedSearchQuery();
  JoinedItemVisit::default_instance_ = new JoinedItemVisit();
  JoinedCartItem::default_instance_ = new JoinedCartItem();
  JoinedSession::default_instance_ = new JoinedSession();
  JoinedSearchQueryResultItem::default_instance_->InitAsDefaultInstance();
  JoinedSearchQuery::default_instance_->InitAsDefaultInstance();
  JoinedItemVisit::default_instance_->InitAsDefaultInstance();
  JoinedCartItem::default_instance_->InitAsDefaultInstance();
  JoinedSession::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_JoinedSession_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_JoinedSession_2eproto {
  StaticDescriptorInitializer_JoinedSession_2eproto() {
    protobuf_AddDesc_JoinedSession_2eproto();
  }
} static_descriptor_initializer_JoinedSession_2eproto_;
const ::google::protobuf::EnumDescriptor* ProtoLanguage_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoLanguage_descriptor_;
}
bool ProtoLanguage_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProtoPageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoPageType_descriptor_;
}
bool ProtoPageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProtoDeviceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoDeviceType_descriptor_;
}
bool ProtoDeviceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProtoCurrency_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoCurrency_descriptor_;
}
bool ProtoCurrency_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int JoinedSearchQueryResultItem::kItemIdFieldNumber;
const int JoinedSearchQueryResultItem::kPositionFieldNumber;
const int JoinedSearchQueryResultItem::kClickedFieldNumber;
const int JoinedSearchQueryResultItem::kShopIdFieldNumber;
const int JoinedSearchQueryResultItem::kCategory1FieldNumber;
const int JoinedSearchQueryResultItem::kCategory2FieldNumber;
const int JoinedSearchQueryResultItem::kCategory3FieldNumber;
const int JoinedSearchQueryResultItem::kIsPaidResultFieldNumber;
const int JoinedSearchQueryResultItem::kIsRecommendationFieldNumber;
#endif  // !_MSC_VER

JoinedSearchQueryResultItem::JoinedSearchQueryResultItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.JoinedSearchQueryResultItem)
}

void JoinedSearchQueryResultItem::InitAsDefaultInstance() {
}

JoinedSearchQueryResultItem::JoinedSearchQueryResultItem(const JoinedSearchQueryResultItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.JoinedSearchQueryResultItem)
}

void JoinedSearchQueryResultItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = 0u;
  clicked_ = false;
  shop_id_ = 0u;
  category1_ = 0u;
  category2_ = 0u;
  category3_ = 0u;
  is_paid_result_ = false;
  is_recommendation_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinedSearchQueryResultItem::~JoinedSearchQueryResultItem() {
  // @@protoc_insertion_point(destructor:cm.JoinedSearchQueryResultItem)
  SharedDtor();
}

void JoinedSearchQueryResultItem::SharedDtor() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (this != default_instance_) {
  }
}

void JoinedSearchQueryResultItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinedSearchQueryResultItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinedSearchQueryResultItem_descriptor_;
}

const JoinedSearchQueryResultItem& JoinedSearchQueryResultItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JoinedSession_2eproto();
  return *default_instance_;
}

JoinedSearchQueryResultItem* JoinedSearchQueryResultItem::default_instance_ = NULL;

JoinedSearchQueryResultItem* JoinedSearchQueryResultItem::New() const {
  return new JoinedSearchQueryResultItem;
}

void JoinedSearchQueryResultItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JoinedSearchQueryResultItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(position_, is_paid_result_);
    if (has_item_id()) {
      if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        item_id_->clear();
      }
    }
    category3_ = 0u;
  }
  is_recommendation_ = false;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinedSearchQueryResultItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.JoinedSearchQueryResultItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool clicked = 15;
      case 15: {
        if (tag == 120) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clicked_)));
          set_has_clicked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_position;
        break;
      }

      // required uint32 position = 19;
      case 19: {
        if (tag == 152) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_item_id;
        break;
      }

      // required string item_id = 20;
      case 20: {
        if (tag == 162) {
         parse_item_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_id().data(), this->item_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "item_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_shop_id;
        break;
      }

      // optional uint32 shop_id = 21;
      case 21: {
        if (tag == 168) {
         parse_shop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shop_id_)));
          set_has_shop_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_category1;
        break;
      }

      // optional uint32 category1 = 22;
      case 22: {
        if (tag == 176) {
         parse_category1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category1_)));
          set_has_category1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_category2;
        break;
      }

      // optional uint32 category2 = 23;
      case 23: {
        if (tag == 184) {
         parse_category2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category2_)));
          set_has_category2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_category3;
        break;
      }

      // optional uint32 category3 = 24;
      case 24: {
        if (tag == 192) {
         parse_category3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category3_)));
          set_has_category3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_is_paid_result;
        break;
      }

      // optional bool is_paid_result = 62;
      case 62: {
        if (tag == 496) {
         parse_is_paid_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paid_result_)));
          set_has_is_paid_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(504)) goto parse_is_recommendation;
        break;
      }

      // optional bool is_recommendation = 63;
      case 63: {
        if (tag == 504) {
         parse_is_recommendation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_recommendation_)));
          set_has_is_recommendation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.JoinedSearchQueryResultItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.JoinedSearchQueryResultItem)
  return false;
#undef DO_
}

void JoinedSearchQueryResultItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.JoinedSearchQueryResultItem)
  // required bool clicked = 15;
  if (has_clicked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->clicked(), output);
  }

  // required uint32 position = 19;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->position(), output);
  }

  // required string item_id = 20;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->item_id(), output);
  }

  // optional uint32 shop_id = 21;
  if (has_shop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->shop_id(), output);
  }

  // optional uint32 category1 = 22;
  if (has_category1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->category1(), output);
  }

  // optional uint32 category2 = 23;
  if (has_category2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->category2(), output);
  }

  // optional uint32 category3 = 24;
  if (has_category3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->category3(), output);
  }

  // optional bool is_paid_result = 62;
  if (has_is_paid_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(62, this->is_paid_result(), output);
  }

  // optional bool is_recommendation = 63;
  if (has_is_recommendation()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(63, this->is_recommendation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.JoinedSearchQueryResultItem)
}

::google::protobuf::uint8* JoinedSearchQueryResultItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.JoinedSearchQueryResultItem)
  // required bool clicked = 15;
  if (has_clicked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->clicked(), target);
  }

  // required uint32 position = 19;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->position(), target);
  }

  // required string item_id = 20;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->item_id(), target);
  }

  // optional uint32 shop_id = 21;
  if (has_shop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->shop_id(), target);
  }

  // optional uint32 category1 = 22;
  if (has_category1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->category1(), target);
  }

  // optional uint32 category2 = 23;
  if (has_category2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->category2(), target);
  }

  // optional uint32 category3 = 24;
  if (has_category3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->category3(), target);
  }

  // optional bool is_paid_result = 62;
  if (has_is_paid_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(62, this->is_paid_result(), target);
  }

  // optional bool is_recommendation = 63;
  if (has_is_recommendation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(63, this->is_recommendation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.JoinedSearchQueryResultItem)
  return target;
}

int JoinedSearchQueryResultItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string item_id = 20;
    if (has_item_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_id());
    }

    // required uint32 position = 19;
    if (has_position()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position());
    }

    // required bool clicked = 15;
    if (has_clicked()) {
      total_size += 1 + 1;
    }

    // optional uint32 shop_id = 21;
    if (has_shop_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shop_id());
    }

    // optional uint32 category1 = 22;
    if (has_category1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category1());
    }

    // optional uint32 category2 = 23;
    if (has_category2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category2());
    }

    // optional uint32 category3 = 24;
    if (has_category3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category3());
    }

    // optional bool is_paid_result = 62;
    if (has_is_paid_result()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool is_recommendation = 63;
    if (has_is_recommendation()) {
      total_size += 2 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinedSearchQueryResultItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinedSearchQueryResultItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinedSearchQueryResultItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinedSearchQueryResultItem::MergeFrom(const JoinedSearchQueryResultItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
    if (from.has_clicked()) {
      set_clicked(from.clicked());
    }
    if (from.has_shop_id()) {
      set_shop_id(from.shop_id());
    }
    if (from.has_category1()) {
      set_category1(from.category1());
    }
    if (from.has_category2()) {
      set_category2(from.category2());
    }
    if (from.has_category3()) {
      set_category3(from.category3());
    }
    if (from.has_is_paid_result()) {
      set_is_paid_result(from.is_paid_result());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_recommendation()) {
      set_is_recommendation(from.is_recommendation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinedSearchQueryResultItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinedSearchQueryResultItem::CopyFrom(const JoinedSearchQueryResultItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinedSearchQueryResultItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void JoinedSearchQueryResultItem::Swap(JoinedSearchQueryResultItem* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(position_, other->position_);
    std::swap(clicked_, other->clicked_);
    std::swap(shop_id_, other->shop_id_);
    std::swap(category1_, other->category1_);
    std::swap(category2_, other->category2_);
    std::swap(category3_, other->category3_);
    std::swap(is_paid_result_, other->is_paid_result_);
    std::swap(is_recommendation_, other->is_recommendation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinedSearchQueryResultItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinedSearchQueryResultItem_descriptor_;
  metadata.reflection = JoinedSearchQueryResultItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JoinedSearchQuery::kTimeFieldNumber;
const int JoinedSearchQuery::kLanguageFieldNumber;
const int JoinedSearchQuery::kDeviceTypeFieldNumber;
const int JoinedSearchQuery::kPageTypeFieldNumber;
const int JoinedSearchQuery::kQueryTypeFieldNumber;
const int JoinedSearchQuery::kPageFieldNumber;
const int JoinedSearchQuery::kQueryStringFieldNumber;
const int JoinedSearchQuery::kQueryStringNormalizedFieldNumber;
const int JoinedSearchQuery::kCategory1FieldNumber;
const int JoinedSearchQuery::kCategory2FieldNumber;
const int JoinedSearchQuery::kCategory3FieldNumber;
const int JoinedSearchQuery::kShopIdFieldNumber;
const int JoinedSearchQuery::kResultItemsFieldNumber;
const int JoinedSearchQuery::kNumResultItemsFieldNumber;
const int JoinedSearchQuery::kNumResultItemsClickedFieldNumber;
const int JoinedSearchQuery::kNumAdImpressionsFieldNumber;
const int JoinedSearchQuery::kNumAdClicksFieldNumber;
const int JoinedSearchQuery::kNumCartItemsFieldNumber;
const int JoinedSearchQuery::kNumOrderItemsFieldNumber;
const int JoinedSearchQuery::kCartValueEurcentsFieldNumber;
const int JoinedSearchQuery::kGmvEurcentsFieldNumber;
const int JoinedSearchQuery::kAbTestGroupFieldNumber;
const int JoinedSearchQuery::kExperimentsFieldNumber;
#endif  // !_MSC_VER

JoinedSearchQuery::JoinedSearchQuery()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.JoinedSearchQuery)
}

void JoinedSearchQuery::InitAsDefaultInstance() {
}

JoinedSearchQuery::JoinedSearchQuery(const JoinedSearchQuery& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.JoinedSearchQuery)
}

void JoinedSearchQuery::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  language_ = 0;
  device_type_ = 0;
  page_type_ = 0;
  query_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = 0u;
  query_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_string_normalized_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category1_ = 0u;
  category2_ = 0u;
  category3_ = 0u;
  shop_id_ = 0u;
  num_result_items_ = 0u;
  num_result_items_clicked_ = 0u;
  num_ad_impressions_ = 0u;
  num_ad_clicks_ = 0u;
  num_cart_items_ = 0u;
  num_order_items_ = 0u;
  cart_value_eurcents_ = 0u;
  gmv_eurcents_ = 0u;
  ab_test_group_ = 0u;
  experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinedSearchQuery::~JoinedSearchQuery() {
  // @@protoc_insertion_point(destructor:cm.JoinedSearchQuery)
  SharedDtor();
}

void JoinedSearchQuery::SharedDtor() {
  if (query_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_type_;
  }
  if (query_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_string_;
  }
  if (query_string_normalized_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_string_normalized_;
  }
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete experiments_;
  }
  if (this != default_instance_) {
  }
}

void JoinedSearchQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinedSearchQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinedSearchQuery_descriptor_;
}

const JoinedSearchQuery& JoinedSearchQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JoinedSession_2eproto();
  return *default_instance_;
}

JoinedSearchQuery* JoinedSearchQuery::default_instance_ = NULL;

JoinedSearchQuery* JoinedSearchQuery::New() const {
  return new JoinedSearchQuery;
}

void JoinedSearchQuery::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JoinedSearchQuery*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(time_, device_type_);
    ZR_(page_type_, page_);
    if (has_query_type()) {
      if (query_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        query_type_->clear();
      }
    }
    if (has_query_string()) {
      if (query_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        query_string_->clear();
      }
    }
    if (has_query_string_normalized()) {
      if (query_string_normalized_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        query_string_normalized_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 61184) {
    ZR_(category1_, shop_id_);
    ZR_(num_result_items_, num_ad_impressions_);
  }
  if (_has_bits_[16 / 32] & 8323072) {
    ZR_(num_ad_clicks_, gmv_eurcents_);
    ab_test_group_ = 0u;
    if (has_experiments()) {
      if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        experiments_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  result_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinedSearchQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.JoinedSearchQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 page = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_language;
        break;
      }

      // required .cm.ProtoLanguage language = 2;
      case 2: {
        if (tag == 16) {
         parse_language:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::cm::ProtoLanguage_IsValid(value)) {
            set_language(static_cast< ::cm::ProtoLanguage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_query_string;
        break;
      }

      // optional string query_string = 3;
      case 3: {
        if (tag == 26) {
         parse_query_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_string().data(), this->query_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "query_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_query_string_normalized;
        break;
      }

      // optional string query_string_normalized = 4;
      case 4: {
        if (tag == 34) {
         parse_query_string_normalized:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_string_normalized()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_string_normalized().data(), this->query_string_normalized().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "query_string_normalized");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_num_result_items;
        break;
      }

      // required uint32 num_result_items = 5;
      case 5: {
        if (tag == 40) {
         parse_num_result_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_result_items_)));
          set_has_num_result_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_num_result_items_clicked;
        break;
      }

      // required uint32 num_result_items_clicked = 6;
      case 6: {
        if (tag == 48) {
         parse_num_result_items_clicked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_result_items_clicked_)));
          set_has_num_result_items_clicked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_num_ad_impressions;
        break;
      }

      // required uint32 num_ad_impressions = 7;
      case 7: {
        if (tag == 56) {
         parse_num_ad_impressions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_ad_impressions_)));
          set_has_num_ad_impressions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_num_ad_clicks;
        break;
      }

      // required uint32 num_ad_clicks = 8;
      case 8: {
        if (tag == 64) {
         parse_num_ad_clicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_ad_clicks_)));
          set_has_num_ad_clicks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ab_test_group;
        break;
      }

      // optional uint32 ab_test_group = 9;
      case 9: {
        if (tag == 72) {
         parse_ab_test_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ab_test_group_)));
          set_has_ab_test_group();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_device_type;
        break;
      }

      // required .cm.ProtoDeviceType device_type = 10;
      case 10: {
        if (tag == 80) {
         parse_device_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::cm::ProtoDeviceType_IsValid(value)) {
            set_device_type(static_cast< ::cm::ProtoDeviceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_page_type;
        break;
      }

      // required .cm.ProtoPageType page_type = 11;
      case 11: {
        if (tag == 88) {
         parse_page_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::cm::ProtoPageType_IsValid(value)) {
            set_page_type(static_cast< ::cm::ProtoPageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_category1;
        break;
      }

      // optional uint32 category1 = 12;
      case 12: {
        if (tag == 96) {
         parse_category1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category1_)));
          set_has_category1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_category2;
        break;
      }

      // optional uint32 category2 = 13;
      case 13: {
        if (tag == 104) {
         parse_category2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category2_)));
          set_has_category2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_category3;
        break;
      }

      // optional uint32 category3 = 14;
      case 14: {
        if (tag == 112) {
         parse_category3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category3_)));
          set_has_category3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_result_items;
        break;
      }

      // repeated .cm.JoinedSearchQueryResultItem result_items = 17;
      case 17: {
        if (tag == 138) {
         parse_result_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_result_items;
        if (input->ExpectTag(144)) goto parse_time;
        break;
      }

      // required uint64 time = 18;
      case 18: {
        if (tag == 144) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_shop_id;
        break;
      }

      // optional uint32 shop_id = 32;
      case 32: {
        if (tag == 256) {
         parse_shop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shop_id_)));
          set_has_shop_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_num_cart_items;
        break;
      }

      // optional uint32 num_cart_items = 43;
      case 43: {
        if (tag == 344) {
         parse_num_cart_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cart_items_)));
          set_has_num_cart_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(352)) goto parse_num_order_items;
        break;
      }

      // optional uint32 num_order_items = 44;
      case 44: {
        if (tag == 352) {
         parse_num_order_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_order_items_)));
          set_has_num_order_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(360)) goto parse_cart_value_eurcents;
        break;
      }

      // optional uint32 cart_value_eurcents = 45;
      case 45: {
        if (tag == 360) {
         parse_cart_value_eurcents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cart_value_eurcents_)));
          set_has_cart_value_eurcents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(368)) goto parse_gmv_eurcents;
        break;
      }

      // optional uint32 gmv_eurcents = 46;
      case 46: {
        if (tag == 368) {
         parse_gmv_eurcents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gmv_eurcents_)));
          set_has_gmv_eurcents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_experiments;
        break;
      }

      // optional string experiments = 55;
      case 55: {
        if (tag == 442) {
         parse_experiments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_experiments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->experiments().data(), this->experiments().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experiments");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(514)) goto parse_query_type;
        break;
      }

      // optional string query_type = 64;
      case 64: {
        if (tag == 514) {
         parse_query_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_type().data(), this->query_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "query_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.JoinedSearchQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.JoinedSearchQuery)
  return false;
#undef DO_
}

void JoinedSearchQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.JoinedSearchQuery)
  // optional uint32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->page(), output);
  }

  // required .cm.ProtoLanguage language = 2;
  if (has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->language(), output);
  }

  // optional string query_string = 3;
  if (has_query_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_string().data(), this->query_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->query_string(), output);
  }

  // optional string query_string_normalized = 4;
  if (has_query_string_normalized()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_string_normalized().data(), this->query_string_normalized().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_string_normalized");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->query_string_normalized(), output);
  }

  // required uint32 num_result_items = 5;
  if (has_num_result_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_result_items(), output);
  }

  // required uint32 num_result_items_clicked = 6;
  if (has_num_result_items_clicked()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num_result_items_clicked(), output);
  }

  // required uint32 num_ad_impressions = 7;
  if (has_num_ad_impressions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->num_ad_impressions(), output);
  }

  // required uint32 num_ad_clicks = 8;
  if (has_num_ad_clicks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->num_ad_clicks(), output);
  }

  // optional uint32 ab_test_group = 9;
  if (has_ab_test_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ab_test_group(), output);
  }

  // required .cm.ProtoDeviceType device_type = 10;
  if (has_device_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->device_type(), output);
  }

  // required .cm.ProtoPageType page_type = 11;
  if (has_page_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->page_type(), output);
  }

  // optional uint32 category1 = 12;
  if (has_category1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->category1(), output);
  }

  // optional uint32 category2 = 13;
  if (has_category2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->category2(), output);
  }

  // optional uint32 category3 = 14;
  if (has_category3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->category3(), output);
  }

  // repeated .cm.JoinedSearchQueryResultItem result_items = 17;
  for (int i = 0; i < this->result_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->result_items(i), output);
  }

  // required uint64 time = 18;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->time(), output);
  }

  // optional uint32 shop_id = 32;
  if (has_shop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->shop_id(), output);
  }

  // optional uint32 num_cart_items = 43;
  if (has_num_cart_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->num_cart_items(), output);
  }

  // optional uint32 num_order_items = 44;
  if (has_num_order_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->num_order_items(), output);
  }

  // optional uint32 cart_value_eurcents = 45;
  if (has_cart_value_eurcents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->cart_value_eurcents(), output);
  }

  // optional uint32 gmv_eurcents = 46;
  if (has_gmv_eurcents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->gmv_eurcents(), output);
  }

  // optional string experiments = 55;
  if (has_experiments()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiments().data(), this->experiments().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experiments");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      55, this->experiments(), output);
  }

  // optional string query_type = 64;
  if (has_query_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_type().data(), this->query_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      64, this->query_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.JoinedSearchQuery)
}

::google::protobuf::uint8* JoinedSearchQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.JoinedSearchQuery)
  // optional uint32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->page(), target);
  }

  // required .cm.ProtoLanguage language = 2;
  if (has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->language(), target);
  }

  // optional string query_string = 3;
  if (has_query_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_string().data(), this->query_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->query_string(), target);
  }

  // optional string query_string_normalized = 4;
  if (has_query_string_normalized()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_string_normalized().data(), this->query_string_normalized().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_string_normalized");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->query_string_normalized(), target);
  }

  // required uint32 num_result_items = 5;
  if (has_num_result_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_result_items(), target);
  }

  // required uint32 num_result_items_clicked = 6;
  if (has_num_result_items_clicked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num_result_items_clicked(), target);
  }

  // required uint32 num_ad_impressions = 7;
  if (has_num_ad_impressions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->num_ad_impressions(), target);
  }

  // required uint32 num_ad_clicks = 8;
  if (has_num_ad_clicks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->num_ad_clicks(), target);
  }

  // optional uint32 ab_test_group = 9;
  if (has_ab_test_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ab_test_group(), target);
  }

  // required .cm.ProtoDeviceType device_type = 10;
  if (has_device_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->device_type(), target);
  }

  // required .cm.ProtoPageType page_type = 11;
  if (has_page_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->page_type(), target);
  }

  // optional uint32 category1 = 12;
  if (has_category1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->category1(), target);
  }

  // optional uint32 category2 = 13;
  if (has_category2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->category2(), target);
  }

  // optional uint32 category3 = 14;
  if (has_category3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->category3(), target);
  }

  // repeated .cm.JoinedSearchQueryResultItem result_items = 17;
  for (int i = 0; i < this->result_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->result_items(i), target);
  }

  // required uint64 time = 18;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->time(), target);
  }

  // optional uint32 shop_id = 32;
  if (has_shop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->shop_id(), target);
  }

  // optional uint32 num_cart_items = 43;
  if (has_num_cart_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->num_cart_items(), target);
  }

  // optional uint32 num_order_items = 44;
  if (has_num_order_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->num_order_items(), target);
  }

  // optional uint32 cart_value_eurcents = 45;
  if (has_cart_value_eurcents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->cart_value_eurcents(), target);
  }

  // optional uint32 gmv_eurcents = 46;
  if (has_gmv_eurcents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->gmv_eurcents(), target);
  }

  // optional string experiments = 55;
  if (has_experiments()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiments().data(), this->experiments().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experiments");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        55, this->experiments(), target);
  }

  // optional string query_type = 64;
  if (has_query_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_type().data(), this->query_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        64, this->query_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.JoinedSearchQuery)
  return target;
}

int JoinedSearchQuery::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 time = 18;
    if (has_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // required .cm.ProtoLanguage language = 2;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->language());
    }

    // required .cm.ProtoDeviceType device_type = 10;
    if (has_device_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->device_type());
    }

    // required .cm.ProtoPageType page_type = 11;
    if (has_page_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->page_type());
    }

    // optional string query_type = 64;
    if (has_query_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_type());
    }

    // optional uint32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page());
    }

    // optional string query_string = 3;
    if (has_query_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_string());
    }

    // optional string query_string_normalized = 4;
    if (has_query_string_normalized()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query_string_normalized());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 category1 = 12;
    if (has_category1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category1());
    }

    // optional uint32 category2 = 13;
    if (has_category2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category2());
    }

    // optional uint32 category3 = 14;
    if (has_category3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category3());
    }

    // optional uint32 shop_id = 32;
    if (has_shop_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shop_id());
    }

    // required uint32 num_result_items = 5;
    if (has_num_result_items()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_result_items());
    }

    // required uint32 num_result_items_clicked = 6;
    if (has_num_result_items_clicked()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_result_items_clicked());
    }

    // required uint32 num_ad_impressions = 7;
    if (has_num_ad_impressions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_ad_impressions());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required uint32 num_ad_clicks = 8;
    if (has_num_ad_clicks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_ad_clicks());
    }

    // optional uint32 num_cart_items = 43;
    if (has_num_cart_items()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_cart_items());
    }

    // optional uint32 num_order_items = 44;
    if (has_num_order_items()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_order_items());
    }

    // optional uint32 cart_value_eurcents = 45;
    if (has_cart_value_eurcents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cart_value_eurcents());
    }

    // optional uint32 gmv_eurcents = 46;
    if (has_gmv_eurcents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gmv_eurcents());
    }

    // optional uint32 ab_test_group = 9;
    if (has_ab_test_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ab_test_group());
    }

    // optional string experiments = 55;
    if (has_experiments()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->experiments());
    }

  }
  // repeated .cm.JoinedSearchQueryResultItem result_items = 17;
  total_size += 2 * this->result_items_size();
  for (int i = 0; i < this->result_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->result_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinedSearchQuery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinedSearchQuery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinedSearchQuery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinedSearchQuery::MergeFrom(const JoinedSearchQuery& from) {
  GOOGLE_CHECK_NE(&from, this);
  result_items_.MergeFrom(from.result_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_language()) {
      set_language(from.language());
    }
    if (from.has_device_type()) {
      set_device_type(from.device_type());
    }
    if (from.has_page_type()) {
      set_page_type(from.page_type());
    }
    if (from.has_query_type()) {
      set_query_type(from.query_type());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
    if (from.has_query_string()) {
      set_query_string(from.query_string());
    }
    if (from.has_query_string_normalized()) {
      set_query_string_normalized(from.query_string_normalized());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_category1()) {
      set_category1(from.category1());
    }
    if (from.has_category2()) {
      set_category2(from.category2());
    }
    if (from.has_category3()) {
      set_category3(from.category3());
    }
    if (from.has_shop_id()) {
      set_shop_id(from.shop_id());
    }
    if (from.has_num_result_items()) {
      set_num_result_items(from.num_result_items());
    }
    if (from.has_num_result_items_clicked()) {
      set_num_result_items_clicked(from.num_result_items_clicked());
    }
    if (from.has_num_ad_impressions()) {
      set_num_ad_impressions(from.num_ad_impressions());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_num_ad_clicks()) {
      set_num_ad_clicks(from.num_ad_clicks());
    }
    if (from.has_num_cart_items()) {
      set_num_cart_items(from.num_cart_items());
    }
    if (from.has_num_order_items()) {
      set_num_order_items(from.num_order_items());
    }
    if (from.has_cart_value_eurcents()) {
      set_cart_value_eurcents(from.cart_value_eurcents());
    }
    if (from.has_gmv_eurcents()) {
      set_gmv_eurcents(from.gmv_eurcents());
    }
    if (from.has_ab_test_group()) {
      set_ab_test_group(from.ab_test_group());
    }
    if (from.has_experiments()) {
      set_experiments(from.experiments());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinedSearchQuery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinedSearchQuery::CopyFrom(const JoinedSearchQuery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinedSearchQuery::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001e00f) != 0x0001e00f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->result_items())) return false;
  return true;
}

void JoinedSearchQuery::Swap(JoinedSearchQuery* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(language_, other->language_);
    std::swap(device_type_, other->device_type_);
    std::swap(page_type_, other->page_type_);
    std::swap(query_type_, other->query_type_);
    std::swap(page_, other->page_);
    std::swap(query_string_, other->query_string_);
    std::swap(query_string_normalized_, other->query_string_normalized_);
    std::swap(category1_, other->category1_);
    std::swap(category2_, other->category2_);
    std::swap(category3_, other->category3_);
    std::swap(shop_id_, other->shop_id_);
    result_items_.Swap(&other->result_items_);
    std::swap(num_result_items_, other->num_result_items_);
    std::swap(num_result_items_clicked_, other->num_result_items_clicked_);
    std::swap(num_ad_impressions_, other->num_ad_impressions_);
    std::swap(num_ad_clicks_, other->num_ad_clicks_);
    std::swap(num_cart_items_, other->num_cart_items_);
    std::swap(num_order_items_, other->num_order_items_);
    std::swap(cart_value_eurcents_, other->cart_value_eurcents_);
    std::swap(gmv_eurcents_, other->gmv_eurcents_);
    std::swap(ab_test_group_, other->ab_test_group_);
    std::swap(experiments_, other->experiments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinedSearchQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinedSearchQuery_descriptor_;
  metadata.reflection = JoinedSearchQuery_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JoinedItemVisit::kTimeFieldNumber;
const int JoinedItemVisit::kItemIdFieldNumber;
const int JoinedItemVisit::kShopIdFieldNumber;
const int JoinedItemVisit::kCategory1FieldNumber;
const int JoinedItemVisit::kCategory2FieldNumber;
const int JoinedItemVisit::kCategory3FieldNumber;
#endif  // !_MSC_VER

JoinedItemVisit::JoinedItemVisit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.JoinedItemVisit)
}

void JoinedItemVisit::InitAsDefaultInstance() {
}

JoinedItemVisit::JoinedItemVisit(const JoinedItemVisit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.JoinedItemVisit)
}

void JoinedItemVisit::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shop_id_ = 0u;
  category1_ = 0u;
  category2_ = 0u;
  category3_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinedItemVisit::~JoinedItemVisit() {
  // @@protoc_insertion_point(destructor:cm.JoinedItemVisit)
  SharedDtor();
}

void JoinedItemVisit::SharedDtor() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (this != default_instance_) {
  }
}

void JoinedItemVisit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinedItemVisit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinedItemVisit_descriptor_;
}

const JoinedItemVisit& JoinedItemVisit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JoinedSession_2eproto();
  return *default_instance_;
}

JoinedItemVisit* JoinedItemVisit::default_instance_ = NULL;

JoinedItemVisit* JoinedItemVisit::New() const {
  return new JoinedItemVisit;
}

void JoinedItemVisit::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JoinedItemVisit*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(shop_id_, category3_);
    time_ = GOOGLE_ULONGLONG(0);
    if (has_item_id()) {
      if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        item_id_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinedItemVisit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.JoinedItemVisit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 time = 26;
      case 26: {
        if (tag == 208) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_item_id;
        break;
      }

      // required string item_id = 27;
      case 27: {
        if (tag == 218) {
         parse_item_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_id().data(), this->item_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "item_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_shop_id;
        break;
      }

      // optional uint32 shop_id = 28;
      case 28: {
        if (tag == 224) {
         parse_shop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shop_id_)));
          set_has_shop_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_category1;
        break;
      }

      // optional uint32 category1 = 29;
      case 29: {
        if (tag == 232) {
         parse_category1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category1_)));
          set_has_category1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_category2;
        break;
      }

      // optional uint32 category2 = 30;
      case 30: {
        if (tag == 240) {
         parse_category2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category2_)));
          set_has_category2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_category3;
        break;
      }

      // optional uint32 category3 = 31;
      case 31: {
        if (tag == 248) {
         parse_category3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category3_)));
          set_has_category3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.JoinedItemVisit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.JoinedItemVisit)
  return false;
#undef DO_
}

void JoinedItemVisit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.JoinedItemVisit)
  // required uint64 time = 26;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(26, this->time(), output);
  }

  // required string item_id = 27;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->item_id(), output);
  }

  // optional uint32 shop_id = 28;
  if (has_shop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->shop_id(), output);
  }

  // optional uint32 category1 = 29;
  if (has_category1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->category1(), output);
  }

  // optional uint32 category2 = 30;
  if (has_category2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->category2(), output);
  }

  // optional uint32 category3 = 31;
  if (has_category3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->category3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.JoinedItemVisit)
}

::google::protobuf::uint8* JoinedItemVisit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.JoinedItemVisit)
  // required uint64 time = 26;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(26, this->time(), target);
  }

  // required string item_id = 27;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->item_id(), target);
  }

  // optional uint32 shop_id = 28;
  if (has_shop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->shop_id(), target);
  }

  // optional uint32 category1 = 29;
  if (has_category1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->category1(), target);
  }

  // optional uint32 category2 = 30;
  if (has_category2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->category2(), target);
  }

  // optional uint32 category3 = 31;
  if (has_category3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->category3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.JoinedItemVisit)
  return target;
}

int JoinedItemVisit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 time = 26;
    if (has_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // required string item_id = 27;
    if (has_item_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_id());
    }

    // optional uint32 shop_id = 28;
    if (has_shop_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shop_id());
    }

    // optional uint32 category1 = 29;
    if (has_category1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category1());
    }

    // optional uint32 category2 = 30;
    if (has_category2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category2());
    }

    // optional uint32 category3 = 31;
    if (has_category3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinedItemVisit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinedItemVisit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinedItemVisit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinedItemVisit::MergeFrom(const JoinedItemVisit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_shop_id()) {
      set_shop_id(from.shop_id());
    }
    if (from.has_category1()) {
      set_category1(from.category1());
    }
    if (from.has_category2()) {
      set_category2(from.category2());
    }
    if (from.has_category3()) {
      set_category3(from.category3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinedItemVisit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinedItemVisit::CopyFrom(const JoinedItemVisit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinedItemVisit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void JoinedItemVisit::Swap(JoinedItemVisit* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(item_id_, other->item_id_);
    std::swap(shop_id_, other->shop_id_);
    std::swap(category1_, other->category1_);
    std::swap(category2_, other->category2_);
    std::swap(category3_, other->category3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinedItemVisit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinedItemVisit_descriptor_;
  metadata.reflection = JoinedItemVisit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JoinedCartItem::kTimeFieldNumber;
const int JoinedCartItem::kItemIdFieldNumber;
const int JoinedCartItem::kQuantityFieldNumber;
const int JoinedCartItem::kPriceCentsFieldNumber;
const int JoinedCartItem::kCurrencyFieldNumber;
const int JoinedCartItem::kCheckoutStepFieldNumber;
const int JoinedCartItem::kShopIdFieldNumber;
const int JoinedCartItem::kCategory1FieldNumber;
const int JoinedCartItem::kCategory2FieldNumber;
const int JoinedCartItem::kCategory3FieldNumber;
#endif  // !_MSC_VER

JoinedCartItem::JoinedCartItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.JoinedCartItem)
}

void JoinedCartItem::InitAsDefaultInstance() {
}

JoinedCartItem::JoinedCartItem(const JoinedCartItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.JoinedCartItem)
}

void JoinedCartItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = 0u;
  price_cents_ = 0u;
  currency_ = 0;
  checkout_step_ = 0u;
  shop_id_ = 0u;
  category1_ = 0u;
  category2_ = 0u;
  category3_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinedCartItem::~JoinedCartItem() {
  // @@protoc_insertion_point(destructor:cm.JoinedCartItem)
  SharedDtor();
}

void JoinedCartItem::SharedDtor() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (this != default_instance_) {
  }
}

void JoinedCartItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinedCartItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinedCartItem_descriptor_;
}

const JoinedCartItem& JoinedCartItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JoinedSession_2eproto();
  return *default_instance_;
}

JoinedCartItem* JoinedCartItem::default_instance_ = NULL;

JoinedCartItem* JoinedCartItem::New() const {
  return new JoinedCartItem;
}

void JoinedCartItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JoinedCartItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(quantity_, category1_);
    time_ = GOOGLE_ULONGLONG(0);
    if (has_item_id()) {
      if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        item_id_->clear();
      }
    }
  }
  ZR_(category2_, category3_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinedCartItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.JoinedCartItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 time = 33;
      case 33: {
        if (tag == 264) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_item_id;
        break;
      }

      // required string item_id = 34;
      case 34: {
        if (tag == 274) {
         parse_item_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_id().data(), this->item_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "item_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_shop_id;
        break;
      }

      // optional uint32 shop_id = 35;
      case 35: {
        if (tag == 280) {
         parse_shop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shop_id_)));
          set_has_shop_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_category1;
        break;
      }

      // optional uint32 category1 = 36;
      case 36: {
        if (tag == 288) {
         parse_category1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category1_)));
          set_has_category1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_category2;
        break;
      }

      // optional uint32 category2 = 37;
      case 37: {
        if (tag == 296) {
         parse_category2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category2_)));
          set_has_category2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_category3;
        break;
      }

      // optional uint32 category3 = 38;
      case 38: {
        if (tag == 304) {
         parse_category3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &category3_)));
          set_has_category3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_quantity;
        break;
      }

      // required uint32 quantity = 39;
      case 39: {
        if (tag == 312) {
         parse_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
          set_has_quantity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_price_cents;
        break;
      }

      // required uint32 price_cents = 40;
      case 40: {
        if (tag == 320) {
         parse_price_cents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_cents_)));
          set_has_price_cents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_currency;
        break;
      }

      // required .cm.ProtoCurrency currency = 41;
      case 41: {
        if (tag == 328) {
         parse_currency:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::cm::ProtoCurrency_IsValid(value)) {
            set_currency(static_cast< ::cm::ProtoCurrency >(value));
          } else {
            mutable_unknown_fields()->AddVarint(41, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_checkout_step;
        break;
      }

      // required uint32 checkout_step = 42;
      case 42: {
        if (tag == 336) {
         parse_checkout_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checkout_step_)));
          set_has_checkout_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.JoinedCartItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.JoinedCartItem)
  return false;
#undef DO_
}

void JoinedCartItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.JoinedCartItem)
  // required uint64 time = 33;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(33, this->time(), output);
  }

  // required string item_id = 34;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->item_id(), output);
  }

  // optional uint32 shop_id = 35;
  if (has_shop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->shop_id(), output);
  }

  // optional uint32 category1 = 36;
  if (has_category1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->category1(), output);
  }

  // optional uint32 category2 = 37;
  if (has_category2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->category2(), output);
  }

  // optional uint32 category3 = 38;
  if (has_category3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->category3(), output);
  }

  // required uint32 quantity = 39;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->quantity(), output);
  }

  // required uint32 price_cents = 40;
  if (has_price_cents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->price_cents(), output);
  }

  // required .cm.ProtoCurrency currency = 41;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      41, this->currency(), output);
  }

  // required uint32 checkout_step = 42;
  if (has_checkout_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->checkout_step(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.JoinedCartItem)
}

::google::protobuf::uint8* JoinedCartItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.JoinedCartItem)
  // required uint64 time = 33;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(33, this->time(), target);
  }

  // required string item_id = 34;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->item_id(), target);
  }

  // optional uint32 shop_id = 35;
  if (has_shop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->shop_id(), target);
  }

  // optional uint32 category1 = 36;
  if (has_category1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->category1(), target);
  }

  // optional uint32 category2 = 37;
  if (has_category2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->category2(), target);
  }

  // optional uint32 category3 = 38;
  if (has_category3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->category3(), target);
  }

  // required uint32 quantity = 39;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->quantity(), target);
  }

  // required uint32 price_cents = 40;
  if (has_price_cents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->price_cents(), target);
  }

  // required .cm.ProtoCurrency currency = 41;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      41, this->currency(), target);
  }

  // required uint32 checkout_step = 42;
  if (has_checkout_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->checkout_step(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.JoinedCartItem)
  return target;
}

int JoinedCartItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 time = 33;
    if (has_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // required string item_id = 34;
    if (has_item_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_id());
    }

    // required uint32 quantity = 39;
    if (has_quantity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // required uint32 price_cents = 40;
    if (has_price_cents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_cents());
    }

    // required .cm.ProtoCurrency currency = 41;
    if (has_currency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->currency());
    }

    // required uint32 checkout_step = 42;
    if (has_checkout_step()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->checkout_step());
    }

    // optional uint32 shop_id = 35;
    if (has_shop_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shop_id());
    }

    // optional uint32 category1 = 36;
    if (has_category1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 category2 = 37;
    if (has_category2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category2());
    }

    // optional uint32 category3 = 38;
    if (has_category3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->category3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinedCartItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinedCartItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinedCartItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinedCartItem::MergeFrom(const JoinedCartItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_price_cents()) {
      set_price_cents(from.price_cents());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_checkout_step()) {
      set_checkout_step(from.checkout_step());
    }
    if (from.has_shop_id()) {
      set_shop_id(from.shop_id());
    }
    if (from.has_category1()) {
      set_category1(from.category1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_category2()) {
      set_category2(from.category2());
    }
    if (from.has_category3()) {
      set_category3(from.category3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinedCartItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinedCartItem::CopyFrom(const JoinedCartItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinedCartItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void JoinedCartItem::Swap(JoinedCartItem* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(item_id_, other->item_id_);
    std::swap(quantity_, other->quantity_);
    std::swap(price_cents_, other->price_cents_);
    std::swap(currency_, other->currency_);
    std::swap(checkout_step_, other->checkout_step_);
    std::swap(shop_id_, other->shop_id_);
    std::swap(category1_, other->category1_);
    std::swap(category2_, other->category2_);
    std::swap(category3_, other->category3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinedCartItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinedCartItem_descriptor_;
  metadata.reflection = JoinedCartItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JoinedSession::kCustomerFieldNumber;
const int JoinedSession::kCustomerSessionIdFieldNumber;
const int JoinedSession::kFirstSeenTimeFieldNumber;
const int JoinedSession::kFirstLastTimeFieldNumber;
const int JoinedSession::kReferrerUrlFieldNumber;
const int JoinedSession::kReferrerCampaignFieldNumber;
const int JoinedSession::kReferrerNameFieldNumber;
const int JoinedSession::kNumCartItemsFieldNumber;
const int JoinedSession::kNumOrderItemsFieldNumber;
const int JoinedSession::kCartValueEurcentsFieldNumber;
const int JoinedSession::kGmvEurcentsFieldNumber;
const int JoinedSession::kAbTestGroupFieldNumber;
const int JoinedSession::kExperimentsFieldNumber;
const int JoinedSession::kSearchQueriesFieldNumber;
const int JoinedSession::kItemVisitsFieldNumber;
const int JoinedSession::kCartItemsFieldNumber;
#endif  // !_MSC_VER

JoinedSession::JoinedSession()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.JoinedSession)
}

void JoinedSession::InitAsDefaultInstance() {
}

JoinedSession::JoinedSession(const JoinedSession& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.JoinedSession)
}

void JoinedSession::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  customer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_session_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_seen_time_ = GOOGLE_ULONGLONG(0);
  first_last_time_ = GOOGLE_ULONGLONG(0);
  referrer_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_campaign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_cart_items_ = 0u;
  num_order_items_ = 0u;
  cart_value_eurcents_ = 0u;
  gmv_eurcents_ = 0u;
  ab_test_group_ = 0u;
  experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinedSession::~JoinedSession() {
  // @@protoc_insertion_point(destructor:cm.JoinedSession)
  SharedDtor();
}

void JoinedSession::SharedDtor() {
  if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customer_;
  }
  if (customer_session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customer_session_id_;
  }
  if (referrer_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_url_;
  }
  if (referrer_campaign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_campaign_;
  }
  if (referrer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_name_;
  }
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete experiments_;
  }
  if (this != default_instance_) {
  }
}

void JoinedSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinedSession::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinedSession_descriptor_;
}

const JoinedSession& JoinedSession::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JoinedSession_2eproto();
  return *default_instance_;
}

JoinedSession* JoinedSession::default_instance_ = NULL;

JoinedSession* JoinedSession::New() const {
  return new JoinedSession;
}

void JoinedSession::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JoinedSession*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(first_seen_time_, first_last_time_);
    if (has_customer()) {
      if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        customer_->clear();
      }
    }
    if (has_customer_session_id()) {
      if (customer_session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        customer_session_id_->clear();
      }
    }
    if (has_referrer_url()) {
      if (referrer_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referrer_url_->clear();
      }
    }
    if (has_referrer_campaign()) {
      if (referrer_campaign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referrer_campaign_->clear();
      }
    }
    if (has_referrer_name()) {
      if (referrer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        referrer_name_->clear();
      }
    }
    num_cart_items_ = 0u;
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(num_order_items_, gmv_eurcents_);
    ab_test_group_ = 0u;
    if (has_experiments()) {
      if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        experiments_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  search_queries_.Clear();
  item_visits_.Clear();
  cart_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinedSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.JoinedSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cm.JoinedSearchQuery search_queries = 16;
      case 16: {
        if (tag == 130) {
         parse_search_queries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_search_queries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_search_queries;
        if (input->ExpectTag(202)) goto parse_item_visits;
        break;
      }

      // repeated .cm.JoinedItemVisit item_visits = 25;
      case 25: {
        if (tag == 202) {
         parse_item_visits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_visits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_item_visits;
        if (input->ExpectTag(376)) goto parse_num_cart_items;
        break;
      }

      // optional uint32 num_cart_items = 47;
      case 47: {
        if (tag == 376) {
         parse_num_cart_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cart_items_)));
          set_has_num_cart_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(384)) goto parse_num_order_items;
        break;
      }

      // optional uint32 num_order_items = 48;
      case 48: {
        if (tag == 384) {
         parse_num_order_items:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_order_items_)));
          set_has_num_order_items();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(392)) goto parse_cart_value_eurcents;
        break;
      }

      // optional uint32 cart_value_eurcents = 49;
      case 49: {
        if (tag == 392) {
         parse_cart_value_eurcents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cart_value_eurcents_)));
          set_has_cart_value_eurcents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_gmv_eurcents;
        break;
      }

      // optional uint32 gmv_eurcents = 50;
      case 50: {
        if (tag == 400) {
         parse_gmv_eurcents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gmv_eurcents_)));
          set_has_gmv_eurcents();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_ab_test_group;
        break;
      }

      // optional uint32 ab_test_group = 51;
      case 51: {
        if (tag == 408) {
         parse_ab_test_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ab_test_group_)));
          set_has_ab_test_group();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_cart_items;
        break;
      }

      // repeated .cm.JoinedCartItem cart_items = 52;
      case 52: {
        if (tag == 418) {
         parse_cart_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cart_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_cart_items;
        if (input->ExpectTag(424)) goto parse_first_seen_time;
        break;
      }

      // optional uint64 first_seen_time = 53;
      case 53: {
        if (tag == 424) {
         parse_first_seen_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &first_seen_time_)));
          set_has_first_seen_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(432)) goto parse_first_last_time;
        break;
      }

      // optional uint64 first_last_time = 54;
      case 54: {
        if (tag == 432) {
         parse_first_last_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &first_last_time_)));
          set_has_first_last_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_experiments;
        break;
      }

      // optional string experiments = 56;
      case 56: {
        if (tag == 450) {
         parse_experiments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_experiments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->experiments().data(), this->experiments().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experiments");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_referrer_url;
        break;
      }

      // optional string referrer_url = 57;
      case 57: {
        if (tag == 458) {
         parse_referrer_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referrer_url().data(), this->referrer_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referrer_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_referrer_campaign;
        break;
      }

      // optional string referrer_campaign = 58;
      case 58: {
        if (tag == 466) {
         parse_referrer_campaign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer_campaign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referrer_campaign().data(), this->referrer_campaign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referrer_campaign");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_referrer_name;
        break;
      }

      // optional string referrer_name = 59;
      case 59: {
        if (tag == 474) {
         parse_referrer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->referrer_name().data(), this->referrer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "referrer_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_customer;
        break;
      }

      // optional string customer = 60;
      case 60: {
        if (tag == 482) {
         parse_customer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->customer().data(), this->customer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "customer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_customer_session_id;
        break;
      }

      // optional string customer_session_id = 61;
      case 61: {
        if (tag == 490) {
         parse_customer_session_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_session_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->customer_session_id().data(), this->customer_session_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "customer_session_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.JoinedSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.JoinedSession)
  return false;
#undef DO_
}

void JoinedSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.JoinedSession)
  // repeated .cm.JoinedSearchQuery search_queries = 16;
  for (int i = 0; i < this->search_queries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->search_queries(i), output);
  }

  // repeated .cm.JoinedItemVisit item_visits = 25;
  for (int i = 0; i < this->item_visits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->item_visits(i), output);
  }

  // optional uint32 num_cart_items = 47;
  if (has_num_cart_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->num_cart_items(), output);
  }

  // optional uint32 num_order_items = 48;
  if (has_num_order_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->num_order_items(), output);
  }

  // optional uint32 cart_value_eurcents = 49;
  if (has_cart_value_eurcents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->cart_value_eurcents(), output);
  }

  // optional uint32 gmv_eurcents = 50;
  if (has_gmv_eurcents()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->gmv_eurcents(), output);
  }

  // optional uint32 ab_test_group = 51;
  if (has_ab_test_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->ab_test_group(), output);
  }

  // repeated .cm.JoinedCartItem cart_items = 52;
  for (int i = 0; i < this->cart_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->cart_items(i), output);
  }

  // optional uint64 first_seen_time = 53;
  if (has_first_seen_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(53, this->first_seen_time(), output);
  }

  // optional uint64 first_last_time = 54;
  if (has_first_last_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(54, this->first_last_time(), output);
  }

  // optional string experiments = 56;
  if (has_experiments()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiments().data(), this->experiments().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experiments");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      56, this->experiments(), output);
  }

  // optional string referrer_url = 57;
  if (has_referrer_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_url().data(), this->referrer_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      57, this->referrer_url(), output);
  }

  // optional string referrer_campaign = 58;
  if (has_referrer_campaign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_campaign().data(), this->referrer_campaign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_campaign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      58, this->referrer_campaign(), output);
  }

  // optional string referrer_name = 59;
  if (has_referrer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_name().data(), this->referrer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      59, this->referrer_name(), output);
  }

  // optional string customer = 60;
  if (has_customer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      60, this->customer(), output);
  }

  // optional string customer_session_id = 61;
  if (has_customer_session_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer_session_id().data(), this->customer_session_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer_session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      61, this->customer_session_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.JoinedSession)
}

::google::protobuf::uint8* JoinedSession::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.JoinedSession)
  // repeated .cm.JoinedSearchQuery search_queries = 16;
  for (int i = 0; i < this->search_queries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->search_queries(i), target);
  }

  // repeated .cm.JoinedItemVisit item_visits = 25;
  for (int i = 0; i < this->item_visits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->item_visits(i), target);
  }

  // optional uint32 num_cart_items = 47;
  if (has_num_cart_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->num_cart_items(), target);
  }

  // optional uint32 num_order_items = 48;
  if (has_num_order_items()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->num_order_items(), target);
  }

  // optional uint32 cart_value_eurcents = 49;
  if (has_cart_value_eurcents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->cart_value_eurcents(), target);
  }

  // optional uint32 gmv_eurcents = 50;
  if (has_gmv_eurcents()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->gmv_eurcents(), target);
  }

  // optional uint32 ab_test_group = 51;
  if (has_ab_test_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->ab_test_group(), target);
  }

  // repeated .cm.JoinedCartItem cart_items = 52;
  for (int i = 0; i < this->cart_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->cart_items(i), target);
  }

  // optional uint64 first_seen_time = 53;
  if (has_first_seen_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(53, this->first_seen_time(), target);
  }

  // optional uint64 first_last_time = 54;
  if (has_first_last_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(54, this->first_last_time(), target);
  }

  // optional string experiments = 56;
  if (has_experiments()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->experiments().data(), this->experiments().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experiments");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->experiments(), target);
  }

  // optional string referrer_url = 57;
  if (has_referrer_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_url().data(), this->referrer_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        57, this->referrer_url(), target);
  }

  // optional string referrer_campaign = 58;
  if (has_referrer_campaign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_campaign().data(), this->referrer_campaign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_campaign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        58, this->referrer_campaign(), target);
  }

  // optional string referrer_name = 59;
  if (has_referrer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->referrer_name().data(), this->referrer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "referrer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->referrer_name(), target);
  }

  // optional string customer = 60;
  if (has_customer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->customer(), target);
  }

  // optional string customer_session_id = 61;
  if (has_customer_session_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer_session_id().data(), this->customer_session_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer_session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        61, this->customer_session_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.JoinedSession)
  return target;
}

int JoinedSession::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string customer = 60;
    if (has_customer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customer());
    }

    // optional string customer_session_id = 61;
    if (has_customer_session_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customer_session_id());
    }

    // optional uint64 first_seen_time = 53;
    if (has_first_seen_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->first_seen_time());
    }

    // optional uint64 first_last_time = 54;
    if (has_first_last_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->first_last_time());
    }

    // optional string referrer_url = 57;
    if (has_referrer_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referrer_url());
    }

    // optional string referrer_campaign = 58;
    if (has_referrer_campaign()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referrer_campaign());
    }

    // optional string referrer_name = 59;
    if (has_referrer_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->referrer_name());
    }

    // optional uint32 num_cart_items = 47;
    if (has_num_cart_items()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_cart_items());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 num_order_items = 48;
    if (has_num_order_items()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_order_items());
    }

    // optional uint32 cart_value_eurcents = 49;
    if (has_cart_value_eurcents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cart_value_eurcents());
    }

    // optional uint32 gmv_eurcents = 50;
    if (has_gmv_eurcents()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gmv_eurcents());
    }

    // optional uint32 ab_test_group = 51;
    if (has_ab_test_group()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ab_test_group());
    }

    // optional string experiments = 56;
    if (has_experiments()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->experiments());
    }

  }
  // repeated .cm.JoinedSearchQuery search_queries = 16;
  total_size += 2 * this->search_queries_size();
  for (int i = 0; i < this->search_queries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->search_queries(i));
  }

  // repeated .cm.JoinedItemVisit item_visits = 25;
  total_size += 2 * this->item_visits_size();
  for (int i = 0; i < this->item_visits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_visits(i));
  }

  // repeated .cm.JoinedCartItem cart_items = 52;
  total_size += 2 * this->cart_items_size();
  for (int i = 0; i < this->cart_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cart_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinedSession::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinedSession* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinedSession*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinedSession::MergeFrom(const JoinedSession& from) {
  GOOGLE_CHECK_NE(&from, this);
  search_queries_.MergeFrom(from.search_queries_);
  item_visits_.MergeFrom(from.item_visits_);
  cart_items_.MergeFrom(from.cart_items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_customer()) {
      set_customer(from.customer());
    }
    if (from.has_customer_session_id()) {
      set_customer_session_id(from.customer_session_id());
    }
    if (from.has_first_seen_time()) {
      set_first_seen_time(from.first_seen_time());
    }
    if (from.has_first_last_time()) {
      set_first_last_time(from.first_last_time());
    }
    if (from.has_referrer_url()) {
      set_referrer_url(from.referrer_url());
    }
    if (from.has_referrer_campaign()) {
      set_referrer_campaign(from.referrer_campaign());
    }
    if (from.has_referrer_name()) {
      set_referrer_name(from.referrer_name());
    }
    if (from.has_num_cart_items()) {
      set_num_cart_items(from.num_cart_items());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_num_order_items()) {
      set_num_order_items(from.num_order_items());
    }
    if (from.has_cart_value_eurcents()) {
      set_cart_value_eurcents(from.cart_value_eurcents());
    }
    if (from.has_gmv_eurcents()) {
      set_gmv_eurcents(from.gmv_eurcents());
    }
    if (from.has_ab_test_group()) {
      set_ab_test_group(from.ab_test_group());
    }
    if (from.has_experiments()) {
      set_experiments(from.experiments());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinedSession::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinedSession::CopyFrom(const JoinedSession& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinedSession::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->search_queries())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->item_visits())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cart_items())) return false;
  return true;
}

void JoinedSession::Swap(JoinedSession* other) {
  if (other != this) {
    std::swap(customer_, other->customer_);
    std::swap(customer_session_id_, other->customer_session_id_);
    std::swap(first_seen_time_, other->first_seen_time_);
    std::swap(first_last_time_, other->first_last_time_);
    std::swap(referrer_url_, other->referrer_url_);
    std::swap(referrer_campaign_, other->referrer_campaign_);
    std::swap(referrer_name_, other->referrer_name_);
    std::swap(num_cart_items_, other->num_cart_items_);
    std::swap(num_order_items_, other->num_order_items_);
    std::swap(cart_value_eurcents_, other->cart_value_eurcents_);
    std::swap(gmv_eurcents_, other->gmv_eurcents_);
    std::swap(ab_test_group_, other->ab_test_group_);
    std::swap(experiments_, other->experiments_);
    search_queries_.Swap(&other->search_queries_);
    item_visits_.Swap(&other->item_visits_);
    cart_items_.Swap(&other->cart_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinedSession::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinedSession_descriptor_;
  metadata.reflection = JoinedSession_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cm

// @@protoc_insertion_point(global_scope)

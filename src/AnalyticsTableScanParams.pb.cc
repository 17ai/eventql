// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AnalyticsTableScanParams.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AnalyticsTableScanParams.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cm {

namespace {

const ::google::protobuf::Descriptor* AnalyticsTableScanMapperParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalyticsTableScanMapperParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnalyticsTableScanReducerParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalyticsTableScanReducerParams_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AnalyticsTableScanParams_2eproto() {
  protobuf_AddDesc_AnalyticsTableScanParams_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AnalyticsTableScanParams.proto");
  GOOGLE_CHECK(file != NULL);
  AnalyticsTableScanMapperParams_descriptor_ = file->message_type(0);
  static const int AnalyticsTableScanMapperParams_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanMapperParams, stream_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanMapperParams, partition_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanMapperParams, scanlet_params_),
  };
  AnalyticsTableScanMapperParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnalyticsTableScanMapperParams_descriptor_,
      AnalyticsTableScanMapperParams::default_instance_,
      AnalyticsTableScanMapperParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanMapperParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanMapperParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnalyticsTableScanMapperParams));
  AnalyticsTableScanReducerParams_descriptor_ = file->message_type(1);
  static const int AnalyticsTableScanReducerParams_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, customer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, from_unixmicros_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, until_unixmicros_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, scanlet_params_),
  };
  AnalyticsTableScanReducerParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnalyticsTableScanReducerParams_descriptor_,
      AnalyticsTableScanReducerParams::default_instance_,
      AnalyticsTableScanReducerParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalyticsTableScanReducerParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnalyticsTableScanReducerParams));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AnalyticsTableScanParams_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnalyticsTableScanMapperParams_descriptor_, &AnalyticsTableScanMapperParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnalyticsTableScanReducerParams_descriptor_, &AnalyticsTableScanReducerParams::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AnalyticsTableScanParams_2eproto() {
  delete AnalyticsTableScanMapperParams::default_instance_;
  delete AnalyticsTableScanMapperParams_reflection_;
  delete AnalyticsTableScanReducerParams::default_instance_;
  delete AnalyticsTableScanReducerParams_reflection_;
}

void protobuf_AddDesc_AnalyticsTableScanParams_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036AnalyticsTableScanParams.proto\022\002cm\"c\n\036"
    "AnalyticsTableScanMapperParams\022\022\n\nstream"
    "_key\030\001 \002(\t\022\025\n\rpartition_key\030\002 \002(\t\022\026\n\016sca"
    "nlet_params\030\003 \001(\t\"~\n\037AnalyticsTableScanR"
    "educerParams\022\020\n\010customer\030\001 \002(\t\022\027\n\017from_u"
    "nixmicros\030\002 \002(\004\022\030\n\020until_unixmicros\030\003 \002("
    "\004\022\026\n\016scanlet_params\030\004 \001(\t", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AnalyticsTableScanParams.proto", &protobuf_RegisterTypes);
  AnalyticsTableScanMapperParams::default_instance_ = new AnalyticsTableScanMapperParams();
  AnalyticsTableScanReducerParams::default_instance_ = new AnalyticsTableScanReducerParams();
  AnalyticsTableScanMapperParams::default_instance_->InitAsDefaultInstance();
  AnalyticsTableScanReducerParams::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AnalyticsTableScanParams_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AnalyticsTableScanParams_2eproto {
  StaticDescriptorInitializer_AnalyticsTableScanParams_2eproto() {
    protobuf_AddDesc_AnalyticsTableScanParams_2eproto();
  }
} static_descriptor_initializer_AnalyticsTableScanParams_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AnalyticsTableScanMapperParams::kStreamKeyFieldNumber;
const int AnalyticsTableScanMapperParams::kPartitionKeyFieldNumber;
const int AnalyticsTableScanMapperParams::kScanletParamsFieldNumber;
#endif  // !_MSC_VER

AnalyticsTableScanMapperParams::AnalyticsTableScanMapperParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.AnalyticsTableScanMapperParams)
}

void AnalyticsTableScanMapperParams::InitAsDefaultInstance() {
}

AnalyticsTableScanMapperParams::AnalyticsTableScanMapperParams(const AnalyticsTableScanMapperParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.AnalyticsTableScanMapperParams)
}

void AnalyticsTableScanMapperParams::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stream_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partition_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scanlet_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnalyticsTableScanMapperParams::~AnalyticsTableScanMapperParams() {
  // @@protoc_insertion_point(destructor:cm.AnalyticsTableScanMapperParams)
  SharedDtor();
}

void AnalyticsTableScanMapperParams::SharedDtor() {
  if (stream_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stream_key_;
  }
  if (partition_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete partition_key_;
  }
  if (scanlet_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scanlet_params_;
  }
  if (this != default_instance_) {
  }
}

void AnalyticsTableScanMapperParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalyticsTableScanMapperParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalyticsTableScanMapperParams_descriptor_;
}

const AnalyticsTableScanMapperParams& AnalyticsTableScanMapperParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AnalyticsTableScanParams_2eproto();
  return *default_instance_;
}

AnalyticsTableScanMapperParams* AnalyticsTableScanMapperParams::default_instance_ = NULL;

AnalyticsTableScanMapperParams* AnalyticsTableScanMapperParams::New() const {
  return new AnalyticsTableScanMapperParams;
}

void AnalyticsTableScanMapperParams::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_stream_key()) {
      if (stream_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stream_key_->clear();
      }
    }
    if (has_partition_key()) {
      if (partition_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        partition_key_->clear();
      }
    }
    if (has_scanlet_params()) {
      if (scanlet_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scanlet_params_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnalyticsTableScanMapperParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.AnalyticsTableScanMapperParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string stream_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stream_key().data(), this->stream_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stream_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partition_key;
        break;
      }

      // required string partition_key = 2;
      case 2: {
        if (tag == 18) {
         parse_partition_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->partition_key().data(), this->partition_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "partition_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_scanlet_params;
        break;
      }

      // optional string scanlet_params = 3;
      case 3: {
        if (tag == 26) {
         parse_scanlet_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scanlet_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scanlet_params().data(), this->scanlet_params().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scanlet_params");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.AnalyticsTableScanMapperParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.AnalyticsTableScanMapperParams)
  return false;
#undef DO_
}

void AnalyticsTableScanMapperParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.AnalyticsTableScanMapperParams)
  // required string stream_key = 1;
  if (has_stream_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stream_key().data(), this->stream_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stream_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stream_key(), output);
  }

  // required string partition_key = 2;
  if (has_partition_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partition_key().data(), this->partition_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "partition_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->partition_key(), output);
  }

  // optional string scanlet_params = 3;
  if (has_scanlet_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scanlet_params().data(), this->scanlet_params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scanlet_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->scanlet_params(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.AnalyticsTableScanMapperParams)
}

::google::protobuf::uint8* AnalyticsTableScanMapperParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.AnalyticsTableScanMapperParams)
  // required string stream_key = 1;
  if (has_stream_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stream_key().data(), this->stream_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stream_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stream_key(), target);
  }

  // required string partition_key = 2;
  if (has_partition_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partition_key().data(), this->partition_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "partition_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partition_key(), target);
  }

  // optional string scanlet_params = 3;
  if (has_scanlet_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scanlet_params().data(), this->scanlet_params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scanlet_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->scanlet_params(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.AnalyticsTableScanMapperParams)
  return target;
}

int AnalyticsTableScanMapperParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string stream_key = 1;
    if (has_stream_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stream_key());
    }

    // required string partition_key = 2;
    if (has_partition_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partition_key());
    }

    // optional string scanlet_params = 3;
    if (has_scanlet_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scanlet_params());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalyticsTableScanMapperParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnalyticsTableScanMapperParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnalyticsTableScanMapperParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnalyticsTableScanMapperParams::MergeFrom(const AnalyticsTableScanMapperParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stream_key()) {
      set_stream_key(from.stream_key());
    }
    if (from.has_partition_key()) {
      set_partition_key(from.partition_key());
    }
    if (from.has_scanlet_params()) {
      set_scanlet_params(from.scanlet_params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnalyticsTableScanMapperParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalyticsTableScanMapperParams::CopyFrom(const AnalyticsTableScanMapperParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalyticsTableScanMapperParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AnalyticsTableScanMapperParams::Swap(AnalyticsTableScanMapperParams* other) {
  if (other != this) {
    std::swap(stream_key_, other->stream_key_);
    std::swap(partition_key_, other->partition_key_);
    std::swap(scanlet_params_, other->scanlet_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnalyticsTableScanMapperParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalyticsTableScanMapperParams_descriptor_;
  metadata.reflection = AnalyticsTableScanMapperParams_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnalyticsTableScanReducerParams::kCustomerFieldNumber;
const int AnalyticsTableScanReducerParams::kFromUnixmicrosFieldNumber;
const int AnalyticsTableScanReducerParams::kUntilUnixmicrosFieldNumber;
const int AnalyticsTableScanReducerParams::kScanletParamsFieldNumber;
#endif  // !_MSC_VER

AnalyticsTableScanReducerParams::AnalyticsTableScanReducerParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cm.AnalyticsTableScanReducerParams)
}

void AnalyticsTableScanReducerParams::InitAsDefaultInstance() {
}

AnalyticsTableScanReducerParams::AnalyticsTableScanReducerParams(const AnalyticsTableScanReducerParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cm.AnalyticsTableScanReducerParams)
}

void AnalyticsTableScanReducerParams::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  customer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_unixmicros_ = GOOGLE_ULONGLONG(0);
  until_unixmicros_ = GOOGLE_ULONGLONG(0);
  scanlet_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnalyticsTableScanReducerParams::~AnalyticsTableScanReducerParams() {
  // @@protoc_insertion_point(destructor:cm.AnalyticsTableScanReducerParams)
  SharedDtor();
}

void AnalyticsTableScanReducerParams::SharedDtor() {
  if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customer_;
  }
  if (scanlet_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scanlet_params_;
  }
  if (this != default_instance_) {
  }
}

void AnalyticsTableScanReducerParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalyticsTableScanReducerParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalyticsTableScanReducerParams_descriptor_;
}

const AnalyticsTableScanReducerParams& AnalyticsTableScanReducerParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AnalyticsTableScanParams_2eproto();
  return *default_instance_;
}

AnalyticsTableScanReducerParams* AnalyticsTableScanReducerParams::default_instance_ = NULL;

AnalyticsTableScanReducerParams* AnalyticsTableScanReducerParams::New() const {
  return new AnalyticsTableScanReducerParams;
}

void AnalyticsTableScanReducerParams::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AnalyticsTableScanReducerParams*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(from_unixmicros_, until_unixmicros_);
    if (has_customer()) {
      if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        customer_->clear();
      }
    }
    if (has_scanlet_params()) {
      if (scanlet_params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scanlet_params_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnalyticsTableScanReducerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cm.AnalyticsTableScanReducerParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string customer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->customer().data(), this->customer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "customer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_from_unixmicros;
        break;
      }

      // required uint64 from_unixmicros = 2;
      case 2: {
        if (tag == 16) {
         parse_from_unixmicros:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_unixmicros_)));
          set_has_from_unixmicros();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_until_unixmicros;
        break;
      }

      // required uint64 until_unixmicros = 3;
      case 3: {
        if (tag == 24) {
         parse_until_unixmicros:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &until_unixmicros_)));
          set_has_until_unixmicros();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_scanlet_params;
        break;
      }

      // optional string scanlet_params = 4;
      case 4: {
        if (tag == 34) {
         parse_scanlet_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scanlet_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scanlet_params().data(), this->scanlet_params().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scanlet_params");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cm.AnalyticsTableScanReducerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cm.AnalyticsTableScanReducerParams)
  return false;
#undef DO_
}

void AnalyticsTableScanReducerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cm.AnalyticsTableScanReducerParams)
  // required string customer = 1;
  if (has_customer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->customer(), output);
  }

  // required uint64 from_unixmicros = 2;
  if (has_from_unixmicros()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->from_unixmicros(), output);
  }

  // required uint64 until_unixmicros = 3;
  if (has_until_unixmicros()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->until_unixmicros(), output);
  }

  // optional string scanlet_params = 4;
  if (has_scanlet_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scanlet_params().data(), this->scanlet_params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scanlet_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scanlet_params(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cm.AnalyticsTableScanReducerParams)
}

::google::protobuf::uint8* AnalyticsTableScanReducerParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cm.AnalyticsTableScanReducerParams)
  // required string customer = 1;
  if (has_customer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->customer(), target);
  }

  // required uint64 from_unixmicros = 2;
  if (has_from_unixmicros()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->from_unixmicros(), target);
  }

  // required uint64 until_unixmicros = 3;
  if (has_until_unixmicros()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->until_unixmicros(), target);
  }

  // optional string scanlet_params = 4;
  if (has_scanlet_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scanlet_params().data(), this->scanlet_params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scanlet_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scanlet_params(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cm.AnalyticsTableScanReducerParams)
  return target;
}

int AnalyticsTableScanReducerParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string customer = 1;
    if (has_customer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customer());
    }

    // required uint64 from_unixmicros = 2;
    if (has_from_unixmicros()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from_unixmicros());
    }

    // required uint64 until_unixmicros = 3;
    if (has_until_unixmicros()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->until_unixmicros());
    }

    // optional string scanlet_params = 4;
    if (has_scanlet_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scanlet_params());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalyticsTableScanReducerParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnalyticsTableScanReducerParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnalyticsTableScanReducerParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnalyticsTableScanReducerParams::MergeFrom(const AnalyticsTableScanReducerParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_customer()) {
      set_customer(from.customer());
    }
    if (from.has_from_unixmicros()) {
      set_from_unixmicros(from.from_unixmicros());
    }
    if (from.has_until_unixmicros()) {
      set_until_unixmicros(from.until_unixmicros());
    }
    if (from.has_scanlet_params()) {
      set_scanlet_params(from.scanlet_params());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnalyticsTableScanReducerParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalyticsTableScanReducerParams::CopyFrom(const AnalyticsTableScanReducerParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalyticsTableScanReducerParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AnalyticsTableScanReducerParams::Swap(AnalyticsTableScanReducerParams* other) {
  if (other != this) {
    std::swap(customer_, other->customer_);
    std::swap(from_unixmicros_, other->from_unixmicros_);
    std::swap(until_unixmicros_, other->until_unixmicros_);
    std::swap(scanlet_params_, other->scanlet_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnalyticsTableScanReducerParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalyticsTableScanReducerParams_descriptor_;
  metadata.reflection = AnalyticsTableScanReducerParams_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cm

// @@protoc_insertion_point(global_scope)

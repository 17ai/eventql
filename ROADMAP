ROADMAP
- [x] result cursors
- [ ] zookeeper master
- [ ] standalone mode
- [ ] in memory visibility
- [ ] pluggable auth
- [ ] evql
- [ ] table id + table deletion
- [ ] easy create table
- [ ] record deletion
- [ ] binary protocol
- [ ] distributed join
- [ ] unified scheduler
- [ ] partitioning/sharding v2
- [ ] improved table iterator iface (update, ordered, restricted, etc)

-> rename remoteexpression -> pipelinedexpression
-> local execution fastpath in pipelinedexpression {addRemoteQuery, addLocalQuery}
-> impl pipelining in pipilinedexpr

...

-> remoteexpression -> pipelinedremoteexpressions
-> partial group by + group by merge
-> qtree rewrite: .lastXX sufix
-> evql scheduler w/ group by rewrite

???
- tablecursor::next -> num_rows/batch ??
- tablecursor::nextEncoded optional fastpath (for remote aggregate)

kleinkram:
- [ ] accept SQL query as post data in /api/v1/sql


bugfixes:
  - bug: select time from testtbl order by value desc limit 10;
  - time at functions

features:
  - SVALUE object/array type
  - implement set subqueries (IN/etc)
  - implement scalar subqueries

improvements:
  - safety limits
  - mapreduce required columns
  - SQL local join
  - insert from csv endpoint
  - GROUP BY WITH ROLLUP
  - UPDATE flag in insert
  - max partition size (~500mb)
  - better compaction strategy for append-only tables
  - improve groupbymerge parallel execution...
  - better __lsm_id column encoding
  - push out full un-joined qtrees instead of just seqscans (e.g. nested subselects)
  - cstable mmap remove
  - push down order by into seq scan node if possible -> optimize ORDER BY LIMIT scans.
  - live replication schema changes
  - local sql scan fastpath
  - scan in memory arenas in lsm reader
  - include in memory arenas in lsm reader cache key/checksum
  - LSM delayed delete compacted tables
  - compact eventql/infra/cstable/idx storage (unified file)
  - push down table subqueries to remote node if no aggregation or only WITHIN record aggregation
  - SQL distributed hash join
  - write cstable record id -> col posi idx for fast lookup by ID
  - metric precomputation
  - optimize recordmaterializer
  - clean up PartitionSnapshot (remove paths + nrecs)
  - JOINING replica status (writes but no reads)
  - replication improvement: check ids before sending data
  - remove SELECT_DEEP stuff
  - remove obsolete tablerepo/estrat/etc pointers
  - zli reduce: missing num_shards
  - zli reduce: missing reduce_fn

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JoinedSession.proto

#ifndef PROTOBUF_JoinedSession_2eproto__INCLUDED
#define PROTOBUF_JoinedSession_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_JoinedSession_2eproto();
void protobuf_AssignDesc_JoinedSession_2eproto();
void protobuf_ShutdownFile_JoinedSession_2eproto();

class JoinedSearchQueryResultItem;
class JoinedSearchQuery;
class JoinedItemVisit;
class JoinedCartItem;
class JoinedSession;

enum ProtoLanguage {
  LANGUAGE_UNKNOWN_LANGUAGE = 0,
  LANGUAGE_DE = 2,
  LANGUAGE_EN = 1,
  LANGUAGE_ES = 3,
  LANGUAGE_FR = 4,
  LANGUAGE_IT = 5,
  LANGUAGE_NL = 6,
  LANGUAGE_PL = 7
};
bool ProtoLanguage_IsValid(int value);
const ProtoLanguage ProtoLanguage_MIN = LANGUAGE_UNKNOWN_LANGUAGE;
const ProtoLanguage ProtoLanguage_MAX = LANGUAGE_PL;
const int ProtoLanguage_ARRAYSIZE = ProtoLanguage_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoLanguage_descriptor();
inline const ::std::string& ProtoLanguage_Name(ProtoLanguage value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoLanguage_descriptor(), value);
}
inline bool ProtoLanguage_Parse(
    const ::std::string& name, ProtoLanguage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoLanguage>(
    ProtoLanguage_descriptor(), name, value);
}
enum ProtoPageType {
  PAGETYPE_UNKNOWN_PAGE = 0,
  PAGETYPE_SEARCH_PAGE = 1,
  PAGETYPE_CATALOG_PAGE = 2,
  PAGETYPE_PRODUCT_PAGE = 3
};
bool ProtoPageType_IsValid(int value);
const ProtoPageType ProtoPageType_MIN = PAGETYPE_UNKNOWN_PAGE;
const ProtoPageType ProtoPageType_MAX = PAGETYPE_PRODUCT_PAGE;
const int ProtoPageType_ARRAYSIZE = ProtoPageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoPageType_descriptor();
inline const ::std::string& ProtoPageType_Name(ProtoPageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoPageType_descriptor(), value);
}
inline bool ProtoPageType_Parse(
    const ::std::string& name, ProtoPageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoPageType>(
    ProtoPageType_descriptor(), name, value);
}
enum ProtoDeviceType {
  DEVICETYPE_UNKNOWN_DEVICE = 0,
  DEVICETYPE_DESKTOP = 1,
  DEVICETYPE_PHONE = 2,
  DEVICETYPE_TABLET = 3
};
bool ProtoDeviceType_IsValid(int value);
const ProtoDeviceType ProtoDeviceType_MIN = DEVICETYPE_UNKNOWN_DEVICE;
const ProtoDeviceType ProtoDeviceType_MAX = DEVICETYPE_TABLET;
const int ProtoDeviceType_ARRAYSIZE = ProtoDeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoDeviceType_descriptor();
inline const ::std::string& ProtoDeviceType_Name(ProtoDeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoDeviceType_descriptor(), value);
}
inline bool ProtoDeviceType_Parse(
    const ::std::string& name, ProtoDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoDeviceType>(
    ProtoDeviceType_descriptor(), name, value);
}
enum ProtoCurrency {
  CURRENCY_UNKNOWN_CURRENCY = 0,
  CURRENCY_EUR = 1,
  CURRENCY_PLN = 2,
  CURRENCY_USD = 3
};
bool ProtoCurrency_IsValid(int value);
const ProtoCurrency ProtoCurrency_MIN = CURRENCY_UNKNOWN_CURRENCY;
const ProtoCurrency ProtoCurrency_MAX = CURRENCY_USD;
const int ProtoCurrency_ARRAYSIZE = ProtoCurrency_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoCurrency_descriptor();
inline const ::std::string& ProtoCurrency_Name(ProtoCurrency value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoCurrency_descriptor(), value);
}
inline bool ProtoCurrency_Parse(
    const ::std::string& name, ProtoCurrency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoCurrency>(
    ProtoCurrency_descriptor(), name, value);
}
// ===================================================================

class JoinedSearchQueryResultItem : public ::google::protobuf::Message {
 public:
  JoinedSearchQueryResultItem();
  virtual ~JoinedSearchQueryResultItem();

  JoinedSearchQueryResultItem(const JoinedSearchQueryResultItem& from);

  inline JoinedSearchQueryResultItem& operator=(const JoinedSearchQueryResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinedSearchQueryResultItem& default_instance();

  void Swap(JoinedSearchQueryResultItem* other);

  // implements Message ----------------------------------------------

  JoinedSearchQueryResultItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinedSearchQueryResultItem& from);
  void MergeFrom(const JoinedSearchQueryResultItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string item_id = 20;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 20;
  inline const ::std::string& item_id() const;
  inline void set_item_id(const ::std::string& value);
  inline void set_item_id(const char* value);
  inline void set_item_id(const char* value, size_t size);
  inline ::std::string* mutable_item_id();
  inline ::std::string* release_item_id();
  inline void set_allocated_item_id(::std::string* item_id);

  // required uint32 position = 19;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 19;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required bool clicked = 15;
  inline bool has_clicked() const;
  inline void clear_clicked();
  static const int kClickedFieldNumber = 15;
  inline bool clicked() const;
  inline void set_clicked(bool value);

  // optional uint32 shop_id = 21;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 21;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // optional uint32 category1 = 22;
  inline bool has_category1() const;
  inline void clear_category1();
  static const int kCategory1FieldNumber = 22;
  inline ::google::protobuf::uint32 category1() const;
  inline void set_category1(::google::protobuf::uint32 value);

  // optional uint32 category2 = 23;
  inline bool has_category2() const;
  inline void clear_category2();
  static const int kCategory2FieldNumber = 23;
  inline ::google::protobuf::uint32 category2() const;
  inline void set_category2(::google::protobuf::uint32 value);

  // optional uint32 category3 = 24;
  inline bool has_category3() const;
  inline void clear_category3();
  static const int kCategory3FieldNumber = 24;
  inline ::google::protobuf::uint32 category3() const;
  inline void set_category3(::google::protobuf::uint32 value);

  // optional bool is_paid_result = 62;
  inline bool has_is_paid_result() const;
  inline void clear_is_paid_result();
  static const int kIsPaidResultFieldNumber = 62;
  inline bool is_paid_result() const;
  inline void set_is_paid_result(bool value);

  // optional bool is_recommendation = 63;
  inline bool has_is_recommendation() const;
  inline void clear_is_recommendation();
  static const int kIsRecommendationFieldNumber = 63;
  inline bool is_recommendation() const;
  inline void set_is_recommendation(bool value);

  // @@protoc_insertion_point(class_scope:cm.JoinedSearchQueryResultItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_clicked();
  inline void clear_has_clicked();
  inline void set_has_shop_id();
  inline void clear_has_shop_id();
  inline void set_has_category1();
  inline void clear_has_category1();
  inline void set_has_category2();
  inline void clear_has_category2();
  inline void set_has_category3();
  inline void clear_has_category3();
  inline void set_has_is_paid_result();
  inline void clear_has_is_paid_result();
  inline void set_has_is_recommendation();
  inline void clear_has_is_recommendation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* item_id_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::uint32 category1_;
  ::google::protobuf::uint32 category2_;
  bool clicked_;
  bool is_paid_result_;
  bool is_recommendation_;
  ::google::protobuf::uint32 category3_;
  friend void  protobuf_AddDesc_JoinedSession_2eproto();
  friend void protobuf_AssignDesc_JoinedSession_2eproto();
  friend void protobuf_ShutdownFile_JoinedSession_2eproto();

  void InitAsDefaultInstance();
  static JoinedSearchQueryResultItem* default_instance_;
};
// -------------------------------------------------------------------

class JoinedSearchQuery : public ::google::protobuf::Message {
 public:
  JoinedSearchQuery();
  virtual ~JoinedSearchQuery();

  JoinedSearchQuery(const JoinedSearchQuery& from);

  inline JoinedSearchQuery& operator=(const JoinedSearchQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinedSearchQuery& default_instance();

  void Swap(JoinedSearchQuery* other);

  // implements Message ----------------------------------------------

  JoinedSearchQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinedSearchQuery& from);
  void MergeFrom(const JoinedSearchQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 time = 18;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 18;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // required .cm.ProtoLanguage language = 2;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 2;
  inline ::cm::ProtoLanguage language() const;
  inline void set_language(::cm::ProtoLanguage value);

  // required .cm.ProtoDeviceType device_type = 10;
  inline bool has_device_type() const;
  inline void clear_device_type();
  static const int kDeviceTypeFieldNumber = 10;
  inline ::cm::ProtoDeviceType device_type() const;
  inline void set_device_type(::cm::ProtoDeviceType value);

  // required .cm.ProtoPageType page_type = 11;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 11;
  inline ::cm::ProtoPageType page_type() const;
  inline void set_page_type(::cm::ProtoPageType value);

  // optional string query_type = 64;
  inline bool has_query_type() const;
  inline void clear_query_type();
  static const int kQueryTypeFieldNumber = 64;
  inline const ::std::string& query_type() const;
  inline void set_query_type(const ::std::string& value);
  inline void set_query_type(const char* value);
  inline void set_query_type(const char* value, size_t size);
  inline ::std::string* mutable_query_type();
  inline ::std::string* release_query_type();
  inline void set_allocated_query_type(::std::string* query_type);

  // optional uint32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // optional string query_string = 3;
  inline bool has_query_string() const;
  inline void clear_query_string();
  static const int kQueryStringFieldNumber = 3;
  inline const ::std::string& query_string() const;
  inline void set_query_string(const ::std::string& value);
  inline void set_query_string(const char* value);
  inline void set_query_string(const char* value, size_t size);
  inline ::std::string* mutable_query_string();
  inline ::std::string* release_query_string();
  inline void set_allocated_query_string(::std::string* query_string);

  // optional string query_string_normalized = 4;
  inline bool has_query_string_normalized() const;
  inline void clear_query_string_normalized();
  static const int kQueryStringNormalizedFieldNumber = 4;
  inline const ::std::string& query_string_normalized() const;
  inline void set_query_string_normalized(const ::std::string& value);
  inline void set_query_string_normalized(const char* value);
  inline void set_query_string_normalized(const char* value, size_t size);
  inline ::std::string* mutable_query_string_normalized();
  inline ::std::string* release_query_string_normalized();
  inline void set_allocated_query_string_normalized(::std::string* query_string_normalized);

  // optional uint32 category1 = 12;
  inline bool has_category1() const;
  inline void clear_category1();
  static const int kCategory1FieldNumber = 12;
  inline ::google::protobuf::uint32 category1() const;
  inline void set_category1(::google::protobuf::uint32 value);

  // optional uint32 category2 = 13;
  inline bool has_category2() const;
  inline void clear_category2();
  static const int kCategory2FieldNumber = 13;
  inline ::google::protobuf::uint32 category2() const;
  inline void set_category2(::google::protobuf::uint32 value);

  // optional uint32 category3 = 14;
  inline bool has_category3() const;
  inline void clear_category3();
  static const int kCategory3FieldNumber = 14;
  inline ::google::protobuf::uint32 category3() const;
  inline void set_category3(::google::protobuf::uint32 value);

  // optional uint32 shop_id = 32;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 32;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // repeated .cm.JoinedSearchQueryResultItem result_items = 17;
  inline int result_items_size() const;
  inline void clear_result_items();
  static const int kResultItemsFieldNumber = 17;
  inline const ::cm::JoinedSearchQueryResultItem& result_items(int index) const;
  inline ::cm::JoinedSearchQueryResultItem* mutable_result_items(int index);
  inline ::cm::JoinedSearchQueryResultItem* add_result_items();
  inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQueryResultItem >&
      result_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQueryResultItem >*
      mutable_result_items();

  // required uint32 num_result_items = 5;
  inline bool has_num_result_items() const;
  inline void clear_num_result_items();
  static const int kNumResultItemsFieldNumber = 5;
  inline ::google::protobuf::uint32 num_result_items() const;
  inline void set_num_result_items(::google::protobuf::uint32 value);

  // required uint32 num_result_items_clicked = 6;
  inline bool has_num_result_items_clicked() const;
  inline void clear_num_result_items_clicked();
  static const int kNumResultItemsClickedFieldNumber = 6;
  inline ::google::protobuf::uint32 num_result_items_clicked() const;
  inline void set_num_result_items_clicked(::google::protobuf::uint32 value);

  // required uint32 num_ad_impressions = 7;
  inline bool has_num_ad_impressions() const;
  inline void clear_num_ad_impressions();
  static const int kNumAdImpressionsFieldNumber = 7;
  inline ::google::protobuf::uint32 num_ad_impressions() const;
  inline void set_num_ad_impressions(::google::protobuf::uint32 value);

  // required uint32 num_ad_clicks = 8;
  inline bool has_num_ad_clicks() const;
  inline void clear_num_ad_clicks();
  static const int kNumAdClicksFieldNumber = 8;
  inline ::google::protobuf::uint32 num_ad_clicks() const;
  inline void set_num_ad_clicks(::google::protobuf::uint32 value);

  // optional uint32 num_cart_items = 43;
  inline bool has_num_cart_items() const;
  inline void clear_num_cart_items();
  static const int kNumCartItemsFieldNumber = 43;
  inline ::google::protobuf::uint32 num_cart_items() const;
  inline void set_num_cart_items(::google::protobuf::uint32 value);

  // optional uint32 num_order_items = 44;
  inline bool has_num_order_items() const;
  inline void clear_num_order_items();
  static const int kNumOrderItemsFieldNumber = 44;
  inline ::google::protobuf::uint32 num_order_items() const;
  inline void set_num_order_items(::google::protobuf::uint32 value);

  // optional uint32 cart_value_eurcents = 45;
  inline bool has_cart_value_eurcents() const;
  inline void clear_cart_value_eurcents();
  static const int kCartValueEurcentsFieldNumber = 45;
  inline ::google::protobuf::uint32 cart_value_eurcents() const;
  inline void set_cart_value_eurcents(::google::protobuf::uint32 value);

  // optional uint32 gmv_eurcents = 46;
  inline bool has_gmv_eurcents() const;
  inline void clear_gmv_eurcents();
  static const int kGmvEurcentsFieldNumber = 46;
  inline ::google::protobuf::uint32 gmv_eurcents() const;
  inline void set_gmv_eurcents(::google::protobuf::uint32 value);

  // optional uint32 ab_test_group = 9;
  inline bool has_ab_test_group() const;
  inline void clear_ab_test_group();
  static const int kAbTestGroupFieldNumber = 9;
  inline ::google::protobuf::uint32 ab_test_group() const;
  inline void set_ab_test_group(::google::protobuf::uint32 value);

  // optional string experiments = 55;
  inline bool has_experiments() const;
  inline void clear_experiments();
  static const int kExperimentsFieldNumber = 55;
  inline const ::std::string& experiments() const;
  inline void set_experiments(const ::std::string& value);
  inline void set_experiments(const char* value);
  inline void set_experiments(const char* value, size_t size);
  inline ::std::string* mutable_experiments();
  inline ::std::string* release_experiments();
  inline void set_allocated_experiments(::std::string* experiments);

  // @@protoc_insertion_point(class_scope:cm.JoinedSearchQuery)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_device_type();
  inline void clear_has_device_type();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_query_type();
  inline void clear_has_query_type();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_query_string();
  inline void clear_has_query_string();
  inline void set_has_query_string_normalized();
  inline void clear_has_query_string_normalized();
  inline void set_has_category1();
  inline void clear_has_category1();
  inline void set_has_category2();
  inline void clear_has_category2();
  inline void set_has_category3();
  inline void clear_has_category3();
  inline void set_has_shop_id();
  inline void clear_has_shop_id();
  inline void set_has_num_result_items();
  inline void clear_has_num_result_items();
  inline void set_has_num_result_items_clicked();
  inline void clear_has_num_result_items_clicked();
  inline void set_has_num_ad_impressions();
  inline void clear_has_num_ad_impressions();
  inline void set_has_num_ad_clicks();
  inline void clear_has_num_ad_clicks();
  inline void set_has_num_cart_items();
  inline void clear_has_num_cart_items();
  inline void set_has_num_order_items();
  inline void clear_has_num_order_items();
  inline void set_has_cart_value_eurcents();
  inline void clear_has_cart_value_eurcents();
  inline void set_has_gmv_eurcents();
  inline void clear_has_gmv_eurcents();
  inline void set_has_ab_test_group();
  inline void clear_has_ab_test_group();
  inline void set_has_experiments();
  inline void clear_has_experiments();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 time_;
  int language_;
  int device_type_;
  ::std::string* query_type_;
  int page_type_;
  ::google::protobuf::uint32 page_;
  ::std::string* query_string_;
  ::std::string* query_string_normalized_;
  ::google::protobuf::uint32 category1_;
  ::google::protobuf::uint32 category2_;
  ::google::protobuf::uint32 category3_;
  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQueryResultItem > result_items_;
  ::google::protobuf::uint32 num_result_items_;
  ::google::protobuf::uint32 num_result_items_clicked_;
  ::google::protobuf::uint32 num_ad_impressions_;
  ::google::protobuf::uint32 num_ad_clicks_;
  ::google::protobuf::uint32 num_cart_items_;
  ::google::protobuf::uint32 num_order_items_;
  ::google::protobuf::uint32 cart_value_eurcents_;
  ::google::protobuf::uint32 gmv_eurcents_;
  ::std::string* experiments_;
  ::google::protobuf::uint32 ab_test_group_;
  friend void  protobuf_AddDesc_JoinedSession_2eproto();
  friend void protobuf_AssignDesc_JoinedSession_2eproto();
  friend void protobuf_ShutdownFile_JoinedSession_2eproto();

  void InitAsDefaultInstance();
  static JoinedSearchQuery* default_instance_;
};
// -------------------------------------------------------------------

class JoinedItemVisit : public ::google::protobuf::Message {
 public:
  JoinedItemVisit();
  virtual ~JoinedItemVisit();

  JoinedItemVisit(const JoinedItemVisit& from);

  inline JoinedItemVisit& operator=(const JoinedItemVisit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinedItemVisit& default_instance();

  void Swap(JoinedItemVisit* other);

  // implements Message ----------------------------------------------

  JoinedItemVisit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinedItemVisit& from);
  void MergeFrom(const JoinedItemVisit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 time = 26;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 26;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // required string item_id = 27;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 27;
  inline const ::std::string& item_id() const;
  inline void set_item_id(const ::std::string& value);
  inline void set_item_id(const char* value);
  inline void set_item_id(const char* value, size_t size);
  inline ::std::string* mutable_item_id();
  inline ::std::string* release_item_id();
  inline void set_allocated_item_id(::std::string* item_id);

  // optional uint32 shop_id = 28;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 28;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // optional uint32 category1 = 29;
  inline bool has_category1() const;
  inline void clear_category1();
  static const int kCategory1FieldNumber = 29;
  inline ::google::protobuf::uint32 category1() const;
  inline void set_category1(::google::protobuf::uint32 value);

  // optional uint32 category2 = 30;
  inline bool has_category2() const;
  inline void clear_category2();
  static const int kCategory2FieldNumber = 30;
  inline ::google::protobuf::uint32 category2() const;
  inline void set_category2(::google::protobuf::uint32 value);

  // optional uint32 category3 = 31;
  inline bool has_category3() const;
  inline void clear_category3();
  static const int kCategory3FieldNumber = 31;
  inline ::google::protobuf::uint32 category3() const;
  inline void set_category3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cm.JoinedItemVisit)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_shop_id();
  inline void clear_has_shop_id();
  inline void set_has_category1();
  inline void clear_has_category1();
  inline void set_has_category2();
  inline void clear_has_category2();
  inline void set_has_category3();
  inline void clear_has_category3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 time_;
  ::std::string* item_id_;
  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::uint32 category1_;
  ::google::protobuf::uint32 category2_;
  ::google::protobuf::uint32 category3_;
  friend void  protobuf_AddDesc_JoinedSession_2eproto();
  friend void protobuf_AssignDesc_JoinedSession_2eproto();
  friend void protobuf_ShutdownFile_JoinedSession_2eproto();

  void InitAsDefaultInstance();
  static JoinedItemVisit* default_instance_;
};
// -------------------------------------------------------------------

class JoinedCartItem : public ::google::protobuf::Message {
 public:
  JoinedCartItem();
  virtual ~JoinedCartItem();

  JoinedCartItem(const JoinedCartItem& from);

  inline JoinedCartItem& operator=(const JoinedCartItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinedCartItem& default_instance();

  void Swap(JoinedCartItem* other);

  // implements Message ----------------------------------------------

  JoinedCartItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinedCartItem& from);
  void MergeFrom(const JoinedCartItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 time = 33;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 33;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // required string item_id = 34;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 34;
  inline const ::std::string& item_id() const;
  inline void set_item_id(const ::std::string& value);
  inline void set_item_id(const char* value);
  inline void set_item_id(const char* value, size_t size);
  inline ::std::string* mutable_item_id();
  inline ::std::string* release_item_id();
  inline void set_allocated_item_id(::std::string* item_id);

  // required uint32 quantity = 39;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 39;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // required uint32 price_cents = 40;
  inline bool has_price_cents() const;
  inline void clear_price_cents();
  static const int kPriceCentsFieldNumber = 40;
  inline ::google::protobuf::uint32 price_cents() const;
  inline void set_price_cents(::google::protobuf::uint32 value);

  // required .cm.ProtoCurrency currency = 41;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 41;
  inline ::cm::ProtoCurrency currency() const;
  inline void set_currency(::cm::ProtoCurrency value);

  // required uint32 checkout_step = 42;
  inline bool has_checkout_step() const;
  inline void clear_checkout_step();
  static const int kCheckoutStepFieldNumber = 42;
  inline ::google::protobuf::uint32 checkout_step() const;
  inline void set_checkout_step(::google::protobuf::uint32 value);

  // optional uint32 shop_id = 35;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 35;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // optional uint32 category1 = 36;
  inline bool has_category1() const;
  inline void clear_category1();
  static const int kCategory1FieldNumber = 36;
  inline ::google::protobuf::uint32 category1() const;
  inline void set_category1(::google::protobuf::uint32 value);

  // optional uint32 category2 = 37;
  inline bool has_category2() const;
  inline void clear_category2();
  static const int kCategory2FieldNumber = 37;
  inline ::google::protobuf::uint32 category2() const;
  inline void set_category2(::google::protobuf::uint32 value);

  // optional uint32 category3 = 38;
  inline bool has_category3() const;
  inline void clear_category3();
  static const int kCategory3FieldNumber = 38;
  inline ::google::protobuf::uint32 category3() const;
  inline void set_category3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cm.JoinedCartItem)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_price_cents();
  inline void clear_has_price_cents();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_checkout_step();
  inline void clear_has_checkout_step();
  inline void set_has_shop_id();
  inline void clear_has_shop_id();
  inline void set_has_category1();
  inline void clear_has_category1();
  inline void set_has_category2();
  inline void clear_has_category2();
  inline void set_has_category3();
  inline void clear_has_category3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 time_;
  ::std::string* item_id_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint32 price_cents_;
  int currency_;
  ::google::protobuf::uint32 checkout_step_;
  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::uint32 category1_;
  ::google::protobuf::uint32 category2_;
  ::google::protobuf::uint32 category3_;
  friend void  protobuf_AddDesc_JoinedSession_2eproto();
  friend void protobuf_AssignDesc_JoinedSession_2eproto();
  friend void protobuf_ShutdownFile_JoinedSession_2eproto();

  void InitAsDefaultInstance();
  static JoinedCartItem* default_instance_;
};
// -------------------------------------------------------------------

class JoinedSession : public ::google::protobuf::Message {
 public:
  JoinedSession();
  virtual ~JoinedSession();

  JoinedSession(const JoinedSession& from);

  inline JoinedSession& operator=(const JoinedSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinedSession& default_instance();

  void Swap(JoinedSession* other);

  // implements Message ----------------------------------------------

  JoinedSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinedSession& from);
  void MergeFrom(const JoinedSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string customer = 60;
  inline bool has_customer() const;
  inline void clear_customer();
  static const int kCustomerFieldNumber = 60;
  inline const ::std::string& customer() const;
  inline void set_customer(const ::std::string& value);
  inline void set_customer(const char* value);
  inline void set_customer(const char* value, size_t size);
  inline ::std::string* mutable_customer();
  inline ::std::string* release_customer();
  inline void set_allocated_customer(::std::string* customer);

  // optional string customer_session_id = 61;
  inline bool has_customer_session_id() const;
  inline void clear_customer_session_id();
  static const int kCustomerSessionIdFieldNumber = 61;
  inline const ::std::string& customer_session_id() const;
  inline void set_customer_session_id(const ::std::string& value);
  inline void set_customer_session_id(const char* value);
  inline void set_customer_session_id(const char* value, size_t size);
  inline ::std::string* mutable_customer_session_id();
  inline ::std::string* release_customer_session_id();
  inline void set_allocated_customer_session_id(::std::string* customer_session_id);

  // optional uint64 first_seen_time = 53;
  inline bool has_first_seen_time() const;
  inline void clear_first_seen_time();
  static const int kFirstSeenTimeFieldNumber = 53;
  inline ::google::protobuf::uint64 first_seen_time() const;
  inline void set_first_seen_time(::google::protobuf::uint64 value);

  // optional uint64 first_last_time = 54;
  inline bool has_first_last_time() const;
  inline void clear_first_last_time();
  static const int kFirstLastTimeFieldNumber = 54;
  inline ::google::protobuf::uint64 first_last_time() const;
  inline void set_first_last_time(::google::protobuf::uint64 value);

  // optional string referrer_url = 57;
  inline bool has_referrer_url() const;
  inline void clear_referrer_url();
  static const int kReferrerUrlFieldNumber = 57;
  inline const ::std::string& referrer_url() const;
  inline void set_referrer_url(const ::std::string& value);
  inline void set_referrer_url(const char* value);
  inline void set_referrer_url(const char* value, size_t size);
  inline ::std::string* mutable_referrer_url();
  inline ::std::string* release_referrer_url();
  inline void set_allocated_referrer_url(::std::string* referrer_url);

  // optional string referrer_campaign = 58;
  inline bool has_referrer_campaign() const;
  inline void clear_referrer_campaign();
  static const int kReferrerCampaignFieldNumber = 58;
  inline const ::std::string& referrer_campaign() const;
  inline void set_referrer_campaign(const ::std::string& value);
  inline void set_referrer_campaign(const char* value);
  inline void set_referrer_campaign(const char* value, size_t size);
  inline ::std::string* mutable_referrer_campaign();
  inline ::std::string* release_referrer_campaign();
  inline void set_allocated_referrer_campaign(::std::string* referrer_campaign);

  // optional string referrer_name = 59;
  inline bool has_referrer_name() const;
  inline void clear_referrer_name();
  static const int kReferrerNameFieldNumber = 59;
  inline const ::std::string& referrer_name() const;
  inline void set_referrer_name(const ::std::string& value);
  inline void set_referrer_name(const char* value);
  inline void set_referrer_name(const char* value, size_t size);
  inline ::std::string* mutable_referrer_name();
  inline ::std::string* release_referrer_name();
  inline void set_allocated_referrer_name(::std::string* referrer_name);

  // optional uint32 num_cart_items = 47;
  inline bool has_num_cart_items() const;
  inline void clear_num_cart_items();
  static const int kNumCartItemsFieldNumber = 47;
  inline ::google::protobuf::uint32 num_cart_items() const;
  inline void set_num_cart_items(::google::protobuf::uint32 value);

  // optional uint32 num_order_items = 48;
  inline bool has_num_order_items() const;
  inline void clear_num_order_items();
  static const int kNumOrderItemsFieldNumber = 48;
  inline ::google::protobuf::uint32 num_order_items() const;
  inline void set_num_order_items(::google::protobuf::uint32 value);

  // optional uint32 cart_value_eurcents = 49;
  inline bool has_cart_value_eurcents() const;
  inline void clear_cart_value_eurcents();
  static const int kCartValueEurcentsFieldNumber = 49;
  inline ::google::protobuf::uint32 cart_value_eurcents() const;
  inline void set_cart_value_eurcents(::google::protobuf::uint32 value);

  // optional uint32 gmv_eurcents = 50;
  inline bool has_gmv_eurcents() const;
  inline void clear_gmv_eurcents();
  static const int kGmvEurcentsFieldNumber = 50;
  inline ::google::protobuf::uint32 gmv_eurcents() const;
  inline void set_gmv_eurcents(::google::protobuf::uint32 value);

  // optional uint32 ab_test_group = 51;
  inline bool has_ab_test_group() const;
  inline void clear_ab_test_group();
  static const int kAbTestGroupFieldNumber = 51;
  inline ::google::protobuf::uint32 ab_test_group() const;
  inline void set_ab_test_group(::google::protobuf::uint32 value);

  // optional string experiments = 56;
  inline bool has_experiments() const;
  inline void clear_experiments();
  static const int kExperimentsFieldNumber = 56;
  inline const ::std::string& experiments() const;
  inline void set_experiments(const ::std::string& value);
  inline void set_experiments(const char* value);
  inline void set_experiments(const char* value, size_t size);
  inline ::std::string* mutable_experiments();
  inline ::std::string* release_experiments();
  inline void set_allocated_experiments(::std::string* experiments);

  // repeated .cm.JoinedSearchQuery search_queries = 16;
  inline int search_queries_size() const;
  inline void clear_search_queries();
  static const int kSearchQueriesFieldNumber = 16;
  inline const ::cm::JoinedSearchQuery& search_queries(int index) const;
  inline ::cm::JoinedSearchQuery* mutable_search_queries(int index);
  inline ::cm::JoinedSearchQuery* add_search_queries();
  inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQuery >&
      search_queries() const;
  inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQuery >*
      mutable_search_queries();

  // repeated .cm.JoinedItemVisit item_visits = 25;
  inline int item_visits_size() const;
  inline void clear_item_visits();
  static const int kItemVisitsFieldNumber = 25;
  inline const ::cm::JoinedItemVisit& item_visits(int index) const;
  inline ::cm::JoinedItemVisit* mutable_item_visits(int index);
  inline ::cm::JoinedItemVisit* add_item_visits();
  inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedItemVisit >&
      item_visits() const;
  inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedItemVisit >*
      mutable_item_visits();

  // repeated .cm.JoinedCartItem cart_items = 52;
  inline int cart_items_size() const;
  inline void clear_cart_items();
  static const int kCartItemsFieldNumber = 52;
  inline const ::cm::JoinedCartItem& cart_items(int index) const;
  inline ::cm::JoinedCartItem* mutable_cart_items(int index);
  inline ::cm::JoinedCartItem* add_cart_items();
  inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedCartItem >&
      cart_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedCartItem >*
      mutable_cart_items();

  // @@protoc_insertion_point(class_scope:cm.JoinedSession)
 private:
  inline void set_has_customer();
  inline void clear_has_customer();
  inline void set_has_customer_session_id();
  inline void clear_has_customer_session_id();
  inline void set_has_first_seen_time();
  inline void clear_has_first_seen_time();
  inline void set_has_first_last_time();
  inline void clear_has_first_last_time();
  inline void set_has_referrer_url();
  inline void clear_has_referrer_url();
  inline void set_has_referrer_campaign();
  inline void clear_has_referrer_campaign();
  inline void set_has_referrer_name();
  inline void clear_has_referrer_name();
  inline void set_has_num_cart_items();
  inline void clear_has_num_cart_items();
  inline void set_has_num_order_items();
  inline void clear_has_num_order_items();
  inline void set_has_cart_value_eurcents();
  inline void clear_has_cart_value_eurcents();
  inline void set_has_gmv_eurcents();
  inline void clear_has_gmv_eurcents();
  inline void set_has_ab_test_group();
  inline void clear_has_ab_test_group();
  inline void set_has_experiments();
  inline void clear_has_experiments();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* customer_;
  ::std::string* customer_session_id_;
  ::google::protobuf::uint64 first_seen_time_;
  ::google::protobuf::uint64 first_last_time_;
  ::std::string* referrer_url_;
  ::std::string* referrer_campaign_;
  ::std::string* referrer_name_;
  ::google::protobuf::uint32 num_cart_items_;
  ::google::protobuf::uint32 num_order_items_;
  ::google::protobuf::uint32 cart_value_eurcents_;
  ::google::protobuf::uint32 gmv_eurcents_;
  ::std::string* experiments_;
  ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQuery > search_queries_;
  ::google::protobuf::RepeatedPtrField< ::cm::JoinedItemVisit > item_visits_;
  ::google::protobuf::RepeatedPtrField< ::cm::JoinedCartItem > cart_items_;
  ::google::protobuf::uint32 ab_test_group_;
  friend void  protobuf_AddDesc_JoinedSession_2eproto();
  friend void protobuf_AssignDesc_JoinedSession_2eproto();
  friend void protobuf_ShutdownFile_JoinedSession_2eproto();

  void InitAsDefaultInstance();
  static JoinedSession* default_instance_;
};
// ===================================================================


// ===================================================================

// JoinedSearchQueryResultItem

// required string item_id = 20;
inline bool JoinedSearchQueryResultItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinedSearchQueryResultItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinedSearchQueryResultItem::clear_item_id() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_->clear();
  }
  clear_has_item_id();
}
inline const ::std::string& JoinedSearchQueryResultItem::item_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.item_id)
  return *item_id_;
}
inline void JoinedSearchQueryResultItem::set_item_id(const ::std::string& value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.item_id)
}
inline void JoinedSearchQueryResultItem::set_item_id(const char* value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSearchQueryResultItem.item_id)
}
inline void JoinedSearchQueryResultItem::set_item_id(const char* value, size_t size) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSearchQueryResultItem.item_id)
}
inline ::std::string* JoinedSearchQueryResultItem::mutable_item_id() {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQueryResultItem.item_id)
  return item_id_;
}
inline ::std::string* JoinedSearchQueryResultItem::release_item_id() {
  clear_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_id_;
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSearchQueryResultItem::set_allocated_item_id(::std::string* item_id) {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (item_id) {
    set_has_item_id();
    item_id_ = item_id;
  } else {
    clear_has_item_id();
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSearchQueryResultItem.item_id)
}

// required uint32 position = 19;
inline bool JoinedSearchQueryResultItem::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinedSearchQueryResultItem::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinedSearchQueryResultItem::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 JoinedSearchQueryResultItem::position() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.position)
  return position_;
}
inline void JoinedSearchQueryResultItem::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.position)
}

// required bool clicked = 15;
inline bool JoinedSearchQueryResultItem::has_clicked() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_clicked() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinedSearchQueryResultItem::clear_has_clicked() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinedSearchQueryResultItem::clear_clicked() {
  clicked_ = false;
  clear_has_clicked();
}
inline bool JoinedSearchQueryResultItem::clicked() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.clicked)
  return clicked_;
}
inline void JoinedSearchQueryResultItem::set_clicked(bool value) {
  set_has_clicked();
  clicked_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.clicked)
}

// optional uint32 shop_id = 21;
inline bool JoinedSearchQueryResultItem::has_shop_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_shop_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinedSearchQueryResultItem::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinedSearchQueryResultItem::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 JoinedSearchQueryResultItem::shop_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.shop_id)
  return shop_id_;
}
inline void JoinedSearchQueryResultItem::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.shop_id)
}

// optional uint32 category1 = 22;
inline bool JoinedSearchQueryResultItem::has_category1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_category1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinedSearchQueryResultItem::clear_has_category1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinedSearchQueryResultItem::clear_category1() {
  category1_ = 0u;
  clear_has_category1();
}
inline ::google::protobuf::uint32 JoinedSearchQueryResultItem::category1() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.category1)
  return category1_;
}
inline void JoinedSearchQueryResultItem::set_category1(::google::protobuf::uint32 value) {
  set_has_category1();
  category1_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.category1)
}

// optional uint32 category2 = 23;
inline bool JoinedSearchQueryResultItem::has_category2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_category2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinedSearchQueryResultItem::clear_has_category2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinedSearchQueryResultItem::clear_category2() {
  category2_ = 0u;
  clear_has_category2();
}
inline ::google::protobuf::uint32 JoinedSearchQueryResultItem::category2() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.category2)
  return category2_;
}
inline void JoinedSearchQueryResultItem::set_category2(::google::protobuf::uint32 value) {
  set_has_category2();
  category2_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.category2)
}

// optional uint32 category3 = 24;
inline bool JoinedSearchQueryResultItem::has_category3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_category3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinedSearchQueryResultItem::clear_has_category3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinedSearchQueryResultItem::clear_category3() {
  category3_ = 0u;
  clear_has_category3();
}
inline ::google::protobuf::uint32 JoinedSearchQueryResultItem::category3() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.category3)
  return category3_;
}
inline void JoinedSearchQueryResultItem::set_category3(::google::protobuf::uint32 value) {
  set_has_category3();
  category3_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.category3)
}

// optional bool is_paid_result = 62;
inline bool JoinedSearchQueryResultItem::has_is_paid_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_is_paid_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinedSearchQueryResultItem::clear_has_is_paid_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinedSearchQueryResultItem::clear_is_paid_result() {
  is_paid_result_ = false;
  clear_has_is_paid_result();
}
inline bool JoinedSearchQueryResultItem::is_paid_result() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.is_paid_result)
  return is_paid_result_;
}
inline void JoinedSearchQueryResultItem::set_is_paid_result(bool value) {
  set_has_is_paid_result();
  is_paid_result_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.is_paid_result)
}

// optional bool is_recommendation = 63;
inline bool JoinedSearchQueryResultItem::has_is_recommendation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinedSearchQueryResultItem::set_has_is_recommendation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinedSearchQueryResultItem::clear_has_is_recommendation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinedSearchQueryResultItem::clear_is_recommendation() {
  is_recommendation_ = false;
  clear_has_is_recommendation();
}
inline bool JoinedSearchQueryResultItem::is_recommendation() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQueryResultItem.is_recommendation)
  return is_recommendation_;
}
inline void JoinedSearchQueryResultItem::set_is_recommendation(bool value) {
  set_has_is_recommendation();
  is_recommendation_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQueryResultItem.is_recommendation)
}

// -------------------------------------------------------------------

// JoinedSearchQuery

// required uint64 time = 18;
inline bool JoinedSearchQuery::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinedSearchQuery::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinedSearchQuery::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinedSearchQuery::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 JoinedSearchQuery::time() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.time)
  return time_;
}
inline void JoinedSearchQuery::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.time)
}

// required .cm.ProtoLanguage language = 2;
inline bool JoinedSearchQuery::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinedSearchQuery::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinedSearchQuery::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinedSearchQuery::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::cm::ProtoLanguage JoinedSearchQuery::language() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.language)
  return static_cast< ::cm::ProtoLanguage >(language_);
}
inline void JoinedSearchQuery::set_language(::cm::ProtoLanguage value) {
  assert(::cm::ProtoLanguage_IsValid(value));
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.language)
}

// required .cm.ProtoDeviceType device_type = 10;
inline bool JoinedSearchQuery::has_device_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinedSearchQuery::set_has_device_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinedSearchQuery::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinedSearchQuery::clear_device_type() {
  device_type_ = 0;
  clear_has_device_type();
}
inline ::cm::ProtoDeviceType JoinedSearchQuery::device_type() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.device_type)
  return static_cast< ::cm::ProtoDeviceType >(device_type_);
}
inline void JoinedSearchQuery::set_device_type(::cm::ProtoDeviceType value) {
  assert(::cm::ProtoDeviceType_IsValid(value));
  set_has_device_type();
  device_type_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.device_type)
}

// required .cm.ProtoPageType page_type = 11;
inline bool JoinedSearchQuery::has_page_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinedSearchQuery::set_has_page_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinedSearchQuery::clear_has_page_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinedSearchQuery::clear_page_type() {
  page_type_ = 0;
  clear_has_page_type();
}
inline ::cm::ProtoPageType JoinedSearchQuery::page_type() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.page_type)
  return static_cast< ::cm::ProtoPageType >(page_type_);
}
inline void JoinedSearchQuery::set_page_type(::cm::ProtoPageType value) {
  assert(::cm::ProtoPageType_IsValid(value));
  set_has_page_type();
  page_type_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.page_type)
}

// optional string query_type = 64;
inline bool JoinedSearchQuery::has_query_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinedSearchQuery::set_has_query_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinedSearchQuery::clear_has_query_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinedSearchQuery::clear_query_type() {
  if (query_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_type_->clear();
  }
  clear_has_query_type();
}
inline const ::std::string& JoinedSearchQuery::query_type() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.query_type)
  return *query_type_;
}
inline void JoinedSearchQuery::set_query_type(const ::std::string& value) {
  set_has_query_type();
  if (query_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_type_ = new ::std::string;
  }
  query_type_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.query_type)
}
inline void JoinedSearchQuery::set_query_type(const char* value) {
  set_has_query_type();
  if (query_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_type_ = new ::std::string;
  }
  query_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSearchQuery.query_type)
}
inline void JoinedSearchQuery::set_query_type(const char* value, size_t size) {
  set_has_query_type();
  if (query_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_type_ = new ::std::string;
  }
  query_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSearchQuery.query_type)
}
inline ::std::string* JoinedSearchQuery::mutable_query_type() {
  set_has_query_type();
  if (query_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQuery.query_type)
  return query_type_;
}
inline ::std::string* JoinedSearchQuery::release_query_type() {
  clear_has_query_type();
  if (query_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = query_type_;
    query_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSearchQuery::set_allocated_query_type(::std::string* query_type) {
  if (query_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_type_;
  }
  if (query_type) {
    set_has_query_type();
    query_type_ = query_type;
  } else {
    clear_has_query_type();
    query_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSearchQuery.query_type)
}

// optional uint32 page = 1;
inline bool JoinedSearchQuery::has_page() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinedSearchQuery::set_has_page() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinedSearchQuery::clear_has_page() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinedSearchQuery::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::page() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.page)
  return page_;
}
inline void JoinedSearchQuery::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.page)
}

// optional string query_string = 3;
inline bool JoinedSearchQuery::has_query_string() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinedSearchQuery::set_has_query_string() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinedSearchQuery::clear_has_query_string() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinedSearchQuery::clear_query_string() {
  if (query_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_->clear();
  }
  clear_has_query_string();
}
inline const ::std::string& JoinedSearchQuery::query_string() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.query_string)
  return *query_string_;
}
inline void JoinedSearchQuery::set_query_string(const ::std::string& value) {
  set_has_query_string();
  if (query_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.query_string)
}
inline void JoinedSearchQuery::set_query_string(const char* value) {
  set_has_query_string();
  if (query_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSearchQuery.query_string)
}
inline void JoinedSearchQuery::set_query_string(const char* value, size_t size) {
  set_has_query_string();
  if (query_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSearchQuery.query_string)
}
inline ::std::string* JoinedSearchQuery::mutable_query_string() {
  set_has_query_string();
  if (query_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQuery.query_string)
  return query_string_;
}
inline ::std::string* JoinedSearchQuery::release_query_string() {
  clear_has_query_string();
  if (query_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = query_string_;
    query_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSearchQuery::set_allocated_query_string(::std::string* query_string) {
  if (query_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_string_;
  }
  if (query_string) {
    set_has_query_string();
    query_string_ = query_string;
  } else {
    clear_has_query_string();
    query_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSearchQuery.query_string)
}

// optional string query_string_normalized = 4;
inline bool JoinedSearchQuery::has_query_string_normalized() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinedSearchQuery::set_has_query_string_normalized() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinedSearchQuery::clear_has_query_string_normalized() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinedSearchQuery::clear_query_string_normalized() {
  if (query_string_normalized_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_normalized_->clear();
  }
  clear_has_query_string_normalized();
}
inline const ::std::string& JoinedSearchQuery::query_string_normalized() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.query_string_normalized)
  return *query_string_normalized_;
}
inline void JoinedSearchQuery::set_query_string_normalized(const ::std::string& value) {
  set_has_query_string_normalized();
  if (query_string_normalized_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_normalized_ = new ::std::string;
  }
  query_string_normalized_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.query_string_normalized)
}
inline void JoinedSearchQuery::set_query_string_normalized(const char* value) {
  set_has_query_string_normalized();
  if (query_string_normalized_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_normalized_ = new ::std::string;
  }
  query_string_normalized_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSearchQuery.query_string_normalized)
}
inline void JoinedSearchQuery::set_query_string_normalized(const char* value, size_t size) {
  set_has_query_string_normalized();
  if (query_string_normalized_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_normalized_ = new ::std::string;
  }
  query_string_normalized_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSearchQuery.query_string_normalized)
}
inline ::std::string* JoinedSearchQuery::mutable_query_string_normalized() {
  set_has_query_string_normalized();
  if (query_string_normalized_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    query_string_normalized_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQuery.query_string_normalized)
  return query_string_normalized_;
}
inline ::std::string* JoinedSearchQuery::release_query_string_normalized() {
  clear_has_query_string_normalized();
  if (query_string_normalized_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = query_string_normalized_;
    query_string_normalized_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSearchQuery::set_allocated_query_string_normalized(::std::string* query_string_normalized) {
  if (query_string_normalized_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete query_string_normalized_;
  }
  if (query_string_normalized) {
    set_has_query_string_normalized();
    query_string_normalized_ = query_string_normalized;
  } else {
    clear_has_query_string_normalized();
    query_string_normalized_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSearchQuery.query_string_normalized)
}

// optional uint32 category1 = 12;
inline bool JoinedSearchQuery::has_category1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinedSearchQuery::set_has_category1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinedSearchQuery::clear_has_category1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinedSearchQuery::clear_category1() {
  category1_ = 0u;
  clear_has_category1();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::category1() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.category1)
  return category1_;
}
inline void JoinedSearchQuery::set_category1(::google::protobuf::uint32 value) {
  set_has_category1();
  category1_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.category1)
}

// optional uint32 category2 = 13;
inline bool JoinedSearchQuery::has_category2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JoinedSearchQuery::set_has_category2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JoinedSearchQuery::clear_has_category2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JoinedSearchQuery::clear_category2() {
  category2_ = 0u;
  clear_has_category2();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::category2() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.category2)
  return category2_;
}
inline void JoinedSearchQuery::set_category2(::google::protobuf::uint32 value) {
  set_has_category2();
  category2_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.category2)
}

// optional uint32 category3 = 14;
inline bool JoinedSearchQuery::has_category3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JoinedSearchQuery::set_has_category3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void JoinedSearchQuery::clear_has_category3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void JoinedSearchQuery::clear_category3() {
  category3_ = 0u;
  clear_has_category3();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::category3() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.category3)
  return category3_;
}
inline void JoinedSearchQuery::set_category3(::google::protobuf::uint32 value) {
  set_has_category3();
  category3_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.category3)
}

// optional uint32 shop_id = 32;
inline bool JoinedSearchQuery::has_shop_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void JoinedSearchQuery::set_has_shop_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void JoinedSearchQuery::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void JoinedSearchQuery::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::shop_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.shop_id)
  return shop_id_;
}
inline void JoinedSearchQuery::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.shop_id)
}

// repeated .cm.JoinedSearchQueryResultItem result_items = 17;
inline int JoinedSearchQuery::result_items_size() const {
  return result_items_.size();
}
inline void JoinedSearchQuery::clear_result_items() {
  result_items_.Clear();
}
inline const ::cm::JoinedSearchQueryResultItem& JoinedSearchQuery::result_items(int index) const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.result_items)
  return result_items_.Get(index);
}
inline ::cm::JoinedSearchQueryResultItem* JoinedSearchQuery::mutable_result_items(int index) {
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQuery.result_items)
  return result_items_.Mutable(index);
}
inline ::cm::JoinedSearchQueryResultItem* JoinedSearchQuery::add_result_items() {
  // @@protoc_insertion_point(field_add:cm.JoinedSearchQuery.result_items)
  return result_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQueryResultItem >&
JoinedSearchQuery::result_items() const {
  // @@protoc_insertion_point(field_list:cm.JoinedSearchQuery.result_items)
  return result_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQueryResultItem >*
JoinedSearchQuery::mutable_result_items() {
  // @@protoc_insertion_point(field_mutable_list:cm.JoinedSearchQuery.result_items)
  return &result_items_;
}

// required uint32 num_result_items = 5;
inline bool JoinedSearchQuery::has_num_result_items() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_result_items() {
  _has_bits_[0] |= 0x00002000u;
}
inline void JoinedSearchQuery::clear_has_num_result_items() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void JoinedSearchQuery::clear_num_result_items() {
  num_result_items_ = 0u;
  clear_has_num_result_items();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_result_items() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_result_items)
  return num_result_items_;
}
inline void JoinedSearchQuery::set_num_result_items(::google::protobuf::uint32 value) {
  set_has_num_result_items();
  num_result_items_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_result_items)
}

// required uint32 num_result_items_clicked = 6;
inline bool JoinedSearchQuery::has_num_result_items_clicked() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_result_items_clicked() {
  _has_bits_[0] |= 0x00004000u;
}
inline void JoinedSearchQuery::clear_has_num_result_items_clicked() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void JoinedSearchQuery::clear_num_result_items_clicked() {
  num_result_items_clicked_ = 0u;
  clear_has_num_result_items_clicked();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_result_items_clicked() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_result_items_clicked)
  return num_result_items_clicked_;
}
inline void JoinedSearchQuery::set_num_result_items_clicked(::google::protobuf::uint32 value) {
  set_has_num_result_items_clicked();
  num_result_items_clicked_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_result_items_clicked)
}

// required uint32 num_ad_impressions = 7;
inline bool JoinedSearchQuery::has_num_ad_impressions() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_ad_impressions() {
  _has_bits_[0] |= 0x00008000u;
}
inline void JoinedSearchQuery::clear_has_num_ad_impressions() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void JoinedSearchQuery::clear_num_ad_impressions() {
  num_ad_impressions_ = 0u;
  clear_has_num_ad_impressions();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_ad_impressions() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_ad_impressions)
  return num_ad_impressions_;
}
inline void JoinedSearchQuery::set_num_ad_impressions(::google::protobuf::uint32 value) {
  set_has_num_ad_impressions();
  num_ad_impressions_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_ad_impressions)
}

// required uint32 num_ad_clicks = 8;
inline bool JoinedSearchQuery::has_num_ad_clicks() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_ad_clicks() {
  _has_bits_[0] |= 0x00010000u;
}
inline void JoinedSearchQuery::clear_has_num_ad_clicks() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void JoinedSearchQuery::clear_num_ad_clicks() {
  num_ad_clicks_ = 0u;
  clear_has_num_ad_clicks();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_ad_clicks() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_ad_clicks)
  return num_ad_clicks_;
}
inline void JoinedSearchQuery::set_num_ad_clicks(::google::protobuf::uint32 value) {
  set_has_num_ad_clicks();
  num_ad_clicks_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_ad_clicks)
}

// optional uint32 num_cart_items = 43;
inline bool JoinedSearchQuery::has_num_cart_items() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_cart_items() {
  _has_bits_[0] |= 0x00020000u;
}
inline void JoinedSearchQuery::clear_has_num_cart_items() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void JoinedSearchQuery::clear_num_cart_items() {
  num_cart_items_ = 0u;
  clear_has_num_cart_items();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_cart_items() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_cart_items)
  return num_cart_items_;
}
inline void JoinedSearchQuery::set_num_cart_items(::google::protobuf::uint32 value) {
  set_has_num_cart_items();
  num_cart_items_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_cart_items)
}

// optional uint32 num_order_items = 44;
inline bool JoinedSearchQuery::has_num_order_items() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void JoinedSearchQuery::set_has_num_order_items() {
  _has_bits_[0] |= 0x00040000u;
}
inline void JoinedSearchQuery::clear_has_num_order_items() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void JoinedSearchQuery::clear_num_order_items() {
  num_order_items_ = 0u;
  clear_has_num_order_items();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::num_order_items() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.num_order_items)
  return num_order_items_;
}
inline void JoinedSearchQuery::set_num_order_items(::google::protobuf::uint32 value) {
  set_has_num_order_items();
  num_order_items_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.num_order_items)
}

// optional uint32 cart_value_eurcents = 45;
inline bool JoinedSearchQuery::has_cart_value_eurcents() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void JoinedSearchQuery::set_has_cart_value_eurcents() {
  _has_bits_[0] |= 0x00080000u;
}
inline void JoinedSearchQuery::clear_has_cart_value_eurcents() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void JoinedSearchQuery::clear_cart_value_eurcents() {
  cart_value_eurcents_ = 0u;
  clear_has_cart_value_eurcents();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::cart_value_eurcents() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.cart_value_eurcents)
  return cart_value_eurcents_;
}
inline void JoinedSearchQuery::set_cart_value_eurcents(::google::protobuf::uint32 value) {
  set_has_cart_value_eurcents();
  cart_value_eurcents_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.cart_value_eurcents)
}

// optional uint32 gmv_eurcents = 46;
inline bool JoinedSearchQuery::has_gmv_eurcents() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void JoinedSearchQuery::set_has_gmv_eurcents() {
  _has_bits_[0] |= 0x00100000u;
}
inline void JoinedSearchQuery::clear_has_gmv_eurcents() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void JoinedSearchQuery::clear_gmv_eurcents() {
  gmv_eurcents_ = 0u;
  clear_has_gmv_eurcents();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::gmv_eurcents() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.gmv_eurcents)
  return gmv_eurcents_;
}
inline void JoinedSearchQuery::set_gmv_eurcents(::google::protobuf::uint32 value) {
  set_has_gmv_eurcents();
  gmv_eurcents_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.gmv_eurcents)
}

// optional uint32 ab_test_group = 9;
inline bool JoinedSearchQuery::has_ab_test_group() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void JoinedSearchQuery::set_has_ab_test_group() {
  _has_bits_[0] |= 0x00200000u;
}
inline void JoinedSearchQuery::clear_has_ab_test_group() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void JoinedSearchQuery::clear_ab_test_group() {
  ab_test_group_ = 0u;
  clear_has_ab_test_group();
}
inline ::google::protobuf::uint32 JoinedSearchQuery::ab_test_group() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.ab_test_group)
  return ab_test_group_;
}
inline void JoinedSearchQuery::set_ab_test_group(::google::protobuf::uint32 value) {
  set_has_ab_test_group();
  ab_test_group_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.ab_test_group)
}

// optional string experiments = 55;
inline bool JoinedSearchQuery::has_experiments() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void JoinedSearchQuery::set_has_experiments() {
  _has_bits_[0] |= 0x00400000u;
}
inline void JoinedSearchQuery::clear_has_experiments() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void JoinedSearchQuery::clear_experiments() {
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_->clear();
  }
  clear_has_experiments();
}
inline const ::std::string& JoinedSearchQuery::experiments() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSearchQuery.experiments)
  return *experiments_;
}
inline void JoinedSearchQuery::set_experiments(const ::std::string& value) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSearchQuery.experiments)
}
inline void JoinedSearchQuery::set_experiments(const char* value) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSearchQuery.experiments)
}
inline void JoinedSearchQuery::set_experiments(const char* value, size_t size) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSearchQuery.experiments)
}
inline ::std::string* JoinedSearchQuery::mutable_experiments() {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSearchQuery.experiments)
  return experiments_;
}
inline ::std::string* JoinedSearchQuery::release_experiments() {
  clear_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = experiments_;
    experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSearchQuery::set_allocated_experiments(::std::string* experiments) {
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete experiments_;
  }
  if (experiments) {
    set_has_experiments();
    experiments_ = experiments;
  } else {
    clear_has_experiments();
    experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSearchQuery.experiments)
}

// -------------------------------------------------------------------

// JoinedItemVisit

// required uint64 time = 26;
inline bool JoinedItemVisit::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinedItemVisit::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinedItemVisit::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinedItemVisit::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 JoinedItemVisit::time() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.time)
  return time_;
}
inline void JoinedItemVisit::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.time)
}

// required string item_id = 27;
inline bool JoinedItemVisit::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinedItemVisit::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinedItemVisit::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinedItemVisit::clear_item_id() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_->clear();
  }
  clear_has_item_id();
}
inline const ::std::string& JoinedItemVisit::item_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.item_id)
  return *item_id_;
}
inline void JoinedItemVisit::set_item_id(const ::std::string& value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.item_id)
}
inline void JoinedItemVisit::set_item_id(const char* value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedItemVisit.item_id)
}
inline void JoinedItemVisit::set_item_id(const char* value, size_t size) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedItemVisit.item_id)
}
inline ::std::string* JoinedItemVisit::mutable_item_id() {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedItemVisit.item_id)
  return item_id_;
}
inline ::std::string* JoinedItemVisit::release_item_id() {
  clear_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_id_;
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedItemVisit::set_allocated_item_id(::std::string* item_id) {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (item_id) {
    set_has_item_id();
    item_id_ = item_id;
  } else {
    clear_has_item_id();
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedItemVisit.item_id)
}

// optional uint32 shop_id = 28;
inline bool JoinedItemVisit::has_shop_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinedItemVisit::set_has_shop_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinedItemVisit::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinedItemVisit::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 JoinedItemVisit::shop_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.shop_id)
  return shop_id_;
}
inline void JoinedItemVisit::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.shop_id)
}

// optional uint32 category1 = 29;
inline bool JoinedItemVisit::has_category1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinedItemVisit::set_has_category1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinedItemVisit::clear_has_category1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinedItemVisit::clear_category1() {
  category1_ = 0u;
  clear_has_category1();
}
inline ::google::protobuf::uint32 JoinedItemVisit::category1() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.category1)
  return category1_;
}
inline void JoinedItemVisit::set_category1(::google::protobuf::uint32 value) {
  set_has_category1();
  category1_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.category1)
}

// optional uint32 category2 = 30;
inline bool JoinedItemVisit::has_category2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinedItemVisit::set_has_category2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinedItemVisit::clear_has_category2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinedItemVisit::clear_category2() {
  category2_ = 0u;
  clear_has_category2();
}
inline ::google::protobuf::uint32 JoinedItemVisit::category2() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.category2)
  return category2_;
}
inline void JoinedItemVisit::set_category2(::google::protobuf::uint32 value) {
  set_has_category2();
  category2_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.category2)
}

// optional uint32 category3 = 31;
inline bool JoinedItemVisit::has_category3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinedItemVisit::set_has_category3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinedItemVisit::clear_has_category3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinedItemVisit::clear_category3() {
  category3_ = 0u;
  clear_has_category3();
}
inline ::google::protobuf::uint32 JoinedItemVisit::category3() const {
  // @@protoc_insertion_point(field_get:cm.JoinedItemVisit.category3)
  return category3_;
}
inline void JoinedItemVisit::set_category3(::google::protobuf::uint32 value) {
  set_has_category3();
  category3_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedItemVisit.category3)
}

// -------------------------------------------------------------------

// JoinedCartItem

// required uint64 time = 33;
inline bool JoinedCartItem::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinedCartItem::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinedCartItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinedCartItem::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 JoinedCartItem::time() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.time)
  return time_;
}
inline void JoinedCartItem::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.time)
}

// required string item_id = 34;
inline bool JoinedCartItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinedCartItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinedCartItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinedCartItem::clear_item_id() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_->clear();
  }
  clear_has_item_id();
}
inline const ::std::string& JoinedCartItem::item_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.item_id)
  return *item_id_;
}
inline void JoinedCartItem::set_item_id(const ::std::string& value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.item_id)
}
inline void JoinedCartItem::set_item_id(const char* value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedCartItem.item_id)
}
inline void JoinedCartItem::set_item_id(const char* value, size_t size) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedCartItem.item_id)
}
inline ::std::string* JoinedCartItem::mutable_item_id() {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedCartItem.item_id)
  return item_id_;
}
inline ::std::string* JoinedCartItem::release_item_id() {
  clear_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_id_;
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedCartItem::set_allocated_item_id(::std::string* item_id) {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (item_id) {
    set_has_item_id();
    item_id_ = item_id;
  } else {
    clear_has_item_id();
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedCartItem.item_id)
}

// required uint32 quantity = 39;
inline bool JoinedCartItem::has_quantity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinedCartItem::set_has_quantity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinedCartItem::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinedCartItem::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 JoinedCartItem::quantity() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.quantity)
  return quantity_;
}
inline void JoinedCartItem::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.quantity)
}

// required uint32 price_cents = 40;
inline bool JoinedCartItem::has_price_cents() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinedCartItem::set_has_price_cents() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinedCartItem::clear_has_price_cents() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinedCartItem::clear_price_cents() {
  price_cents_ = 0u;
  clear_has_price_cents();
}
inline ::google::protobuf::uint32 JoinedCartItem::price_cents() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.price_cents)
  return price_cents_;
}
inline void JoinedCartItem::set_price_cents(::google::protobuf::uint32 value) {
  set_has_price_cents();
  price_cents_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.price_cents)
}

// required .cm.ProtoCurrency currency = 41;
inline bool JoinedCartItem::has_currency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinedCartItem::set_has_currency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinedCartItem::clear_has_currency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinedCartItem::clear_currency() {
  currency_ = 0;
  clear_has_currency();
}
inline ::cm::ProtoCurrency JoinedCartItem::currency() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.currency)
  return static_cast< ::cm::ProtoCurrency >(currency_);
}
inline void JoinedCartItem::set_currency(::cm::ProtoCurrency value) {
  assert(::cm::ProtoCurrency_IsValid(value));
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.currency)
}

// required uint32 checkout_step = 42;
inline bool JoinedCartItem::has_checkout_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinedCartItem::set_has_checkout_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinedCartItem::clear_has_checkout_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinedCartItem::clear_checkout_step() {
  checkout_step_ = 0u;
  clear_has_checkout_step();
}
inline ::google::protobuf::uint32 JoinedCartItem::checkout_step() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.checkout_step)
  return checkout_step_;
}
inline void JoinedCartItem::set_checkout_step(::google::protobuf::uint32 value) {
  set_has_checkout_step();
  checkout_step_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.checkout_step)
}

// optional uint32 shop_id = 35;
inline bool JoinedCartItem::has_shop_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinedCartItem::set_has_shop_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinedCartItem::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinedCartItem::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 JoinedCartItem::shop_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.shop_id)
  return shop_id_;
}
inline void JoinedCartItem::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.shop_id)
}

// optional uint32 category1 = 36;
inline bool JoinedCartItem::has_category1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinedCartItem::set_has_category1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinedCartItem::clear_has_category1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinedCartItem::clear_category1() {
  category1_ = 0u;
  clear_has_category1();
}
inline ::google::protobuf::uint32 JoinedCartItem::category1() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.category1)
  return category1_;
}
inline void JoinedCartItem::set_category1(::google::protobuf::uint32 value) {
  set_has_category1();
  category1_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.category1)
}

// optional uint32 category2 = 37;
inline bool JoinedCartItem::has_category2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinedCartItem::set_has_category2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinedCartItem::clear_has_category2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinedCartItem::clear_category2() {
  category2_ = 0u;
  clear_has_category2();
}
inline ::google::protobuf::uint32 JoinedCartItem::category2() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.category2)
  return category2_;
}
inline void JoinedCartItem::set_category2(::google::protobuf::uint32 value) {
  set_has_category2();
  category2_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.category2)
}

// optional uint32 category3 = 38;
inline bool JoinedCartItem::has_category3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JoinedCartItem::set_has_category3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JoinedCartItem::clear_has_category3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JoinedCartItem::clear_category3() {
  category3_ = 0u;
  clear_has_category3();
}
inline ::google::protobuf::uint32 JoinedCartItem::category3() const {
  // @@protoc_insertion_point(field_get:cm.JoinedCartItem.category3)
  return category3_;
}
inline void JoinedCartItem::set_category3(::google::protobuf::uint32 value) {
  set_has_category3();
  category3_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedCartItem.category3)
}

// -------------------------------------------------------------------

// JoinedSession

// optional string customer = 60;
inline bool JoinedSession::has_customer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinedSession::set_has_customer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinedSession::clear_has_customer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinedSession::clear_customer() {
  if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_->clear();
  }
  clear_has_customer();
}
inline const ::std::string& JoinedSession::customer() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.customer)
  return *customer_;
}
inline void JoinedSession::set_customer(const ::std::string& value) {
  set_has_customer();
  if (customer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_ = new ::std::string;
  }
  customer_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.customer)
}
inline void JoinedSession::set_customer(const char* value) {
  set_has_customer();
  if (customer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_ = new ::std::string;
  }
  customer_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.customer)
}
inline void JoinedSession::set_customer(const char* value, size_t size) {
  set_has_customer();
  if (customer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_ = new ::std::string;
  }
  customer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.customer)
}
inline ::std::string* JoinedSession::mutable_customer() {
  set_has_customer();
  if (customer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.customer)
  return customer_;
}
inline ::std::string* JoinedSession::release_customer() {
  clear_has_customer();
  if (customer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = customer_;
    customer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_customer(::std::string* customer) {
  if (customer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customer_;
  }
  if (customer) {
    set_has_customer();
    customer_ = customer;
  } else {
    clear_has_customer();
    customer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.customer)
}

// optional string customer_session_id = 61;
inline bool JoinedSession::has_customer_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinedSession::set_has_customer_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinedSession::clear_has_customer_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinedSession::clear_customer_session_id() {
  if (customer_session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_session_id_->clear();
  }
  clear_has_customer_session_id();
}
inline const ::std::string& JoinedSession::customer_session_id() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.customer_session_id)
  return *customer_session_id_;
}
inline void JoinedSession::set_customer_session_id(const ::std::string& value) {
  set_has_customer_session_id();
  if (customer_session_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_session_id_ = new ::std::string;
  }
  customer_session_id_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.customer_session_id)
}
inline void JoinedSession::set_customer_session_id(const char* value) {
  set_has_customer_session_id();
  if (customer_session_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_session_id_ = new ::std::string;
  }
  customer_session_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.customer_session_id)
}
inline void JoinedSession::set_customer_session_id(const char* value, size_t size) {
  set_has_customer_session_id();
  if (customer_session_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_session_id_ = new ::std::string;
  }
  customer_session_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.customer_session_id)
}
inline ::std::string* JoinedSession::mutable_customer_session_id() {
  set_has_customer_session_id();
  if (customer_session_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    customer_session_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.customer_session_id)
  return customer_session_id_;
}
inline ::std::string* JoinedSession::release_customer_session_id() {
  clear_has_customer_session_id();
  if (customer_session_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = customer_session_id_;
    customer_session_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_customer_session_id(::std::string* customer_session_id) {
  if (customer_session_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customer_session_id_;
  }
  if (customer_session_id) {
    set_has_customer_session_id();
    customer_session_id_ = customer_session_id;
  } else {
    clear_has_customer_session_id();
    customer_session_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.customer_session_id)
}

// optional uint64 first_seen_time = 53;
inline bool JoinedSession::has_first_seen_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinedSession::set_has_first_seen_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinedSession::clear_has_first_seen_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinedSession::clear_first_seen_time() {
  first_seen_time_ = GOOGLE_ULONGLONG(0);
  clear_has_first_seen_time();
}
inline ::google::protobuf::uint64 JoinedSession::first_seen_time() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.first_seen_time)
  return first_seen_time_;
}
inline void JoinedSession::set_first_seen_time(::google::protobuf::uint64 value) {
  set_has_first_seen_time();
  first_seen_time_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.first_seen_time)
}

// optional uint64 first_last_time = 54;
inline bool JoinedSession::has_first_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinedSession::set_has_first_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinedSession::clear_has_first_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinedSession::clear_first_last_time() {
  first_last_time_ = GOOGLE_ULONGLONG(0);
  clear_has_first_last_time();
}
inline ::google::protobuf::uint64 JoinedSession::first_last_time() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.first_last_time)
  return first_last_time_;
}
inline void JoinedSession::set_first_last_time(::google::protobuf::uint64 value) {
  set_has_first_last_time();
  first_last_time_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.first_last_time)
}

// optional string referrer_url = 57;
inline bool JoinedSession::has_referrer_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinedSession::set_has_referrer_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinedSession::clear_has_referrer_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinedSession::clear_referrer_url() {
  if (referrer_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_url_->clear();
  }
  clear_has_referrer_url();
}
inline const ::std::string& JoinedSession::referrer_url() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.referrer_url)
  return *referrer_url_;
}
inline void JoinedSession::set_referrer_url(const ::std::string& value) {
  set_has_referrer_url();
  if (referrer_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_url_ = new ::std::string;
  }
  referrer_url_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.referrer_url)
}
inline void JoinedSession::set_referrer_url(const char* value) {
  set_has_referrer_url();
  if (referrer_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_url_ = new ::std::string;
  }
  referrer_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.referrer_url)
}
inline void JoinedSession::set_referrer_url(const char* value, size_t size) {
  set_has_referrer_url();
  if (referrer_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_url_ = new ::std::string;
  }
  referrer_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.referrer_url)
}
inline ::std::string* JoinedSession::mutable_referrer_url() {
  set_has_referrer_url();
  if (referrer_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.referrer_url)
  return referrer_url_;
}
inline ::std::string* JoinedSession::release_referrer_url() {
  clear_has_referrer_url();
  if (referrer_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = referrer_url_;
    referrer_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_referrer_url(::std::string* referrer_url) {
  if (referrer_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_url_;
  }
  if (referrer_url) {
    set_has_referrer_url();
    referrer_url_ = referrer_url;
  } else {
    clear_has_referrer_url();
    referrer_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.referrer_url)
}

// optional string referrer_campaign = 58;
inline bool JoinedSession::has_referrer_campaign() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinedSession::set_has_referrer_campaign() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinedSession::clear_has_referrer_campaign() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinedSession::clear_referrer_campaign() {
  if (referrer_campaign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_campaign_->clear();
  }
  clear_has_referrer_campaign();
}
inline const ::std::string& JoinedSession::referrer_campaign() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.referrer_campaign)
  return *referrer_campaign_;
}
inline void JoinedSession::set_referrer_campaign(const ::std::string& value) {
  set_has_referrer_campaign();
  if (referrer_campaign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_campaign_ = new ::std::string;
  }
  referrer_campaign_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.referrer_campaign)
}
inline void JoinedSession::set_referrer_campaign(const char* value) {
  set_has_referrer_campaign();
  if (referrer_campaign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_campaign_ = new ::std::string;
  }
  referrer_campaign_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.referrer_campaign)
}
inline void JoinedSession::set_referrer_campaign(const char* value, size_t size) {
  set_has_referrer_campaign();
  if (referrer_campaign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_campaign_ = new ::std::string;
  }
  referrer_campaign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.referrer_campaign)
}
inline ::std::string* JoinedSession::mutable_referrer_campaign() {
  set_has_referrer_campaign();
  if (referrer_campaign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_campaign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.referrer_campaign)
  return referrer_campaign_;
}
inline ::std::string* JoinedSession::release_referrer_campaign() {
  clear_has_referrer_campaign();
  if (referrer_campaign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = referrer_campaign_;
    referrer_campaign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_referrer_campaign(::std::string* referrer_campaign) {
  if (referrer_campaign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_campaign_;
  }
  if (referrer_campaign) {
    set_has_referrer_campaign();
    referrer_campaign_ = referrer_campaign;
  } else {
    clear_has_referrer_campaign();
    referrer_campaign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.referrer_campaign)
}

// optional string referrer_name = 59;
inline bool JoinedSession::has_referrer_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JoinedSession::set_has_referrer_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JoinedSession::clear_has_referrer_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JoinedSession::clear_referrer_name() {
  if (referrer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_name_->clear();
  }
  clear_has_referrer_name();
}
inline const ::std::string& JoinedSession::referrer_name() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.referrer_name)
  return *referrer_name_;
}
inline void JoinedSession::set_referrer_name(const ::std::string& value) {
  set_has_referrer_name();
  if (referrer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_name_ = new ::std::string;
  }
  referrer_name_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.referrer_name)
}
inline void JoinedSession::set_referrer_name(const char* value) {
  set_has_referrer_name();
  if (referrer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_name_ = new ::std::string;
  }
  referrer_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.referrer_name)
}
inline void JoinedSession::set_referrer_name(const char* value, size_t size) {
  set_has_referrer_name();
  if (referrer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_name_ = new ::std::string;
  }
  referrer_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.referrer_name)
}
inline ::std::string* JoinedSession::mutable_referrer_name() {
  set_has_referrer_name();
  if (referrer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referrer_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.referrer_name)
  return referrer_name_;
}
inline ::std::string* JoinedSession::release_referrer_name() {
  clear_has_referrer_name();
  if (referrer_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = referrer_name_;
    referrer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_referrer_name(::std::string* referrer_name) {
  if (referrer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referrer_name_;
  }
  if (referrer_name) {
    set_has_referrer_name();
    referrer_name_ = referrer_name;
  } else {
    clear_has_referrer_name();
    referrer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.referrer_name)
}

// optional uint32 num_cart_items = 47;
inline bool JoinedSession::has_num_cart_items() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JoinedSession::set_has_num_cart_items() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JoinedSession::clear_has_num_cart_items() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JoinedSession::clear_num_cart_items() {
  num_cart_items_ = 0u;
  clear_has_num_cart_items();
}
inline ::google::protobuf::uint32 JoinedSession::num_cart_items() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.num_cart_items)
  return num_cart_items_;
}
inline void JoinedSession::set_num_cart_items(::google::protobuf::uint32 value) {
  set_has_num_cart_items();
  num_cart_items_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.num_cart_items)
}

// optional uint32 num_order_items = 48;
inline bool JoinedSession::has_num_order_items() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JoinedSession::set_has_num_order_items() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JoinedSession::clear_has_num_order_items() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JoinedSession::clear_num_order_items() {
  num_order_items_ = 0u;
  clear_has_num_order_items();
}
inline ::google::protobuf::uint32 JoinedSession::num_order_items() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.num_order_items)
  return num_order_items_;
}
inline void JoinedSession::set_num_order_items(::google::protobuf::uint32 value) {
  set_has_num_order_items();
  num_order_items_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.num_order_items)
}

// optional uint32 cart_value_eurcents = 49;
inline bool JoinedSession::has_cart_value_eurcents() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JoinedSession::set_has_cart_value_eurcents() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JoinedSession::clear_has_cart_value_eurcents() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JoinedSession::clear_cart_value_eurcents() {
  cart_value_eurcents_ = 0u;
  clear_has_cart_value_eurcents();
}
inline ::google::protobuf::uint32 JoinedSession::cart_value_eurcents() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.cart_value_eurcents)
  return cart_value_eurcents_;
}
inline void JoinedSession::set_cart_value_eurcents(::google::protobuf::uint32 value) {
  set_has_cart_value_eurcents();
  cart_value_eurcents_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.cart_value_eurcents)
}

// optional uint32 gmv_eurcents = 50;
inline bool JoinedSession::has_gmv_eurcents() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JoinedSession::set_has_gmv_eurcents() {
  _has_bits_[0] |= 0x00000400u;
}
inline void JoinedSession::clear_has_gmv_eurcents() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void JoinedSession::clear_gmv_eurcents() {
  gmv_eurcents_ = 0u;
  clear_has_gmv_eurcents();
}
inline ::google::protobuf::uint32 JoinedSession::gmv_eurcents() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.gmv_eurcents)
  return gmv_eurcents_;
}
inline void JoinedSession::set_gmv_eurcents(::google::protobuf::uint32 value) {
  set_has_gmv_eurcents();
  gmv_eurcents_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.gmv_eurcents)
}

// optional uint32 ab_test_group = 51;
inline bool JoinedSession::has_ab_test_group() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void JoinedSession::set_has_ab_test_group() {
  _has_bits_[0] |= 0x00000800u;
}
inline void JoinedSession::clear_has_ab_test_group() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void JoinedSession::clear_ab_test_group() {
  ab_test_group_ = 0u;
  clear_has_ab_test_group();
}
inline ::google::protobuf::uint32 JoinedSession::ab_test_group() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.ab_test_group)
  return ab_test_group_;
}
inline void JoinedSession::set_ab_test_group(::google::protobuf::uint32 value) {
  set_has_ab_test_group();
  ab_test_group_ = value;
  // @@protoc_insertion_point(field_set:cm.JoinedSession.ab_test_group)
}

// optional string experiments = 56;
inline bool JoinedSession::has_experiments() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void JoinedSession::set_has_experiments() {
  _has_bits_[0] |= 0x00001000u;
}
inline void JoinedSession::clear_has_experiments() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void JoinedSession::clear_experiments() {
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_->clear();
  }
  clear_has_experiments();
}
inline const ::std::string& JoinedSession::experiments() const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.experiments)
  return *experiments_;
}
inline void JoinedSession::set_experiments(const ::std::string& value) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(value);
  // @@protoc_insertion_point(field_set:cm.JoinedSession.experiments)
}
inline void JoinedSession::set_experiments(const char* value) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(value);
  // @@protoc_insertion_point(field_set_char:cm.JoinedSession.experiments)
}
inline void JoinedSession::set_experiments(const char* value, size_t size) {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  experiments_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cm.JoinedSession.experiments)
}
inline ::std::string* JoinedSession::mutable_experiments() {
  set_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    experiments_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.experiments)
  return experiments_;
}
inline ::std::string* JoinedSession::release_experiments() {
  clear_has_experiments();
  if (experiments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = experiments_;
    experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinedSession::set_allocated_experiments(::std::string* experiments) {
  if (experiments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete experiments_;
  }
  if (experiments) {
    set_has_experiments();
    experiments_ = experiments;
  } else {
    clear_has_experiments();
    experiments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cm.JoinedSession.experiments)
}

// repeated .cm.JoinedSearchQuery search_queries = 16;
inline int JoinedSession::search_queries_size() const {
  return search_queries_.size();
}
inline void JoinedSession::clear_search_queries() {
  search_queries_.Clear();
}
inline const ::cm::JoinedSearchQuery& JoinedSession::search_queries(int index) const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.search_queries)
  return search_queries_.Get(index);
}
inline ::cm::JoinedSearchQuery* JoinedSession::mutable_search_queries(int index) {
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.search_queries)
  return search_queries_.Mutable(index);
}
inline ::cm::JoinedSearchQuery* JoinedSession::add_search_queries() {
  // @@protoc_insertion_point(field_add:cm.JoinedSession.search_queries)
  return search_queries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQuery >&
JoinedSession::search_queries() const {
  // @@protoc_insertion_point(field_list:cm.JoinedSession.search_queries)
  return search_queries_;
}
inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedSearchQuery >*
JoinedSession::mutable_search_queries() {
  // @@protoc_insertion_point(field_mutable_list:cm.JoinedSession.search_queries)
  return &search_queries_;
}

// repeated .cm.JoinedItemVisit item_visits = 25;
inline int JoinedSession::item_visits_size() const {
  return item_visits_.size();
}
inline void JoinedSession::clear_item_visits() {
  item_visits_.Clear();
}
inline const ::cm::JoinedItemVisit& JoinedSession::item_visits(int index) const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.item_visits)
  return item_visits_.Get(index);
}
inline ::cm::JoinedItemVisit* JoinedSession::mutable_item_visits(int index) {
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.item_visits)
  return item_visits_.Mutable(index);
}
inline ::cm::JoinedItemVisit* JoinedSession::add_item_visits() {
  // @@protoc_insertion_point(field_add:cm.JoinedSession.item_visits)
  return item_visits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedItemVisit >&
JoinedSession::item_visits() const {
  // @@protoc_insertion_point(field_list:cm.JoinedSession.item_visits)
  return item_visits_;
}
inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedItemVisit >*
JoinedSession::mutable_item_visits() {
  // @@protoc_insertion_point(field_mutable_list:cm.JoinedSession.item_visits)
  return &item_visits_;
}

// repeated .cm.JoinedCartItem cart_items = 52;
inline int JoinedSession::cart_items_size() const {
  return cart_items_.size();
}
inline void JoinedSession::clear_cart_items() {
  cart_items_.Clear();
}
inline const ::cm::JoinedCartItem& JoinedSession::cart_items(int index) const {
  // @@protoc_insertion_point(field_get:cm.JoinedSession.cart_items)
  return cart_items_.Get(index);
}
inline ::cm::JoinedCartItem* JoinedSession::mutable_cart_items(int index) {
  // @@protoc_insertion_point(field_mutable:cm.JoinedSession.cart_items)
  return cart_items_.Mutable(index);
}
inline ::cm::JoinedCartItem* JoinedSession::add_cart_items() {
  // @@protoc_insertion_point(field_add:cm.JoinedSession.cart_items)
  return cart_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cm::JoinedCartItem >&
JoinedSession::cart_items() const {
  // @@protoc_insertion_point(field_list:cm.JoinedSession.cart_items)
  return cart_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::cm::JoinedCartItem >*
JoinedSession::mutable_cart_items() {
  // @@protoc_insertion_point(field_mutable_list:cm.JoinedSession.cart_items)
  return &cart_items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cm

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cm::ProtoLanguage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cm::ProtoLanguage>() {
  return ::cm::ProtoLanguage_descriptor();
}
template <> struct is_proto_enum< ::cm::ProtoPageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cm::ProtoPageType>() {
  return ::cm::ProtoPageType_descriptor();
}
template <> struct is_proto_enum< ::cm::ProtoDeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cm::ProtoDeviceType>() {
  return ::cm::ProtoDeviceType_descriptor();
}
template <> struct is_proto_enum< ::cm::ProtoCurrency> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cm::ProtoCurrency>() {
  return ::cm::ProtoCurrency_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JoinedSession_2eproto__INCLUDED
